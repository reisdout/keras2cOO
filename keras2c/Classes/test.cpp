#include <stdio.h> 
#include <math.h> 
#include <time.h> 
#include <iostream>
#include <vector>
#include <string>
#include "./include/Car.h"
#include "./MLP_3000_epocas/keras2c_model_MLP.h"
#include "./LSTM_3000_epocas/keras2c_model_LSTM.h"
#include "./CNN_3000_epocas/keras2c_model_CNN.h"
#include "./CNN_3000_epocas_ACK_RTT/keras2c_model_CNN_ACK_RTT.h"
#include "./Model/Model.h"
#include "defines.h"
#include <fstream>
#include <sstream>

#include "./MLP_3000_epocas_SND_RTT/keras2c_model_MLP_SND_RTT.h" 

using namespace std;

# define NS3_TEST_MLP_SND_RTT  1

# define NS3_TEST_CNN_ACK_SND_RTT  2

# define BIG_TEST_CNN_ACK_SND_RTT 3

# define BIG_TEST_CNN_ACK_RTT 4

# define NS3_TEST_CNN_ACK_RTT 5

# define AVERAGE_TIME_TEST 6

void TestMLP_SND_RTT_FromNs3(Model *, float parSND,float parRTT);
void TestCNN_ACK_SND_RTT_FromNs3(Model *, float* parInput);
void TestCNN_ACK_RTT_FromNs3(Model *, float* parInput);
void BigTestCNN_ACK_SND_RTT(Model*);
void BigTestCNN_ACK_RTT(Model*);
void AverageTest(Model*);
float myfloatOutput_CNN_BigTest[1] = {0};
float kerasarray_CNN_BigTest[9];
float  kerasprevision_CNN_BigTest;

float myfloatOutput_CNN_ACK_RTT_BigTest[1] = {0};
float kerasarray_CNN_ACK_RTT_Bigtest[6];
float  kerasprevision_CNN_ACK_RTT_BigTest;

int main()
{
    char c;
    int test_type = -1;

    vector<string> msg {"Hello", "C++", "World", "from", "VS Code", "and the C++ extension!"};
    

    for (const string& word : msg)
    {
        cout << word << " ";
    }
    cout << endl;
    Car fusca("WW");
    cout <<"A marca do carro Ã© : " << fusca.GetBrand() << endl;

    fusca.honk();
//===================================================================================

/***********************Linhas Guia**************************/
/* Para mais detalhes verificar na LSTM*/
/*float test1_dense_68_input_1_input_array[3] = {
+4.51775948e-01f,-3.56429958e-01f,+9.93329312e-01f,}; 
k2c_tensor test1_dense_68_input_1_input = {&test1_dense_68_input_1_input_array[0],1,3,{3,1,1,1,1}}; 
float keras_dense_70_1_test1_array[1] = {
+9.48265851e-01f,}; 
k2c_tensor keras_dense_70_1_test1 = {&keras_dense_70_1_test1_array[0],1,1,{1,1,1,1,1}}; 
float c_dense_70_1_test1_array[1] = {0}; 
k2c_tensor c_dense_70_1_test1 = {&c_dense_70_1_test1_array[0],1,1,{1,1,1,1,1}}; */
    
    Model* ptModel;

    if (test_type == NS3_TEST_MLP_SND_RTT)    
    {
        float x,y;
        cout << "Entre com o SND: ";        
        cin >> x;
        cout << "Entre com o RTT: ";
        cin >> y;
        ptModel = new MLP_SND_RTTModel();
        TestMLP_SND_RTT_FromNs3(ptModel,x,y);
        if(ptModel)
            delete ptModel;
        return 0;
    }

   if (test_type == NS3_TEST_CNN_ACK_SND_RTT)    
    {
        float in[9] = {0.859296, 0.858536, 0.487853, 0.197095, 0.196868, 0.487853, 0.0520372, 0.0393736, 0.489877};
        ptModel = new CNNModel();
        TestCNN_ACK_SND_RTT_FromNs3(ptModel,in);
        if(ptModel)
            delete ptModel;
        return 0;
    }

    if (test_type == NS3_TEST_CNN_ACK_RTT)    
    {
        float in[6] = {1.68998,0.858297,0.363231,0.862346,0.0978824,0.866394};
        ptModel = new CNN_ACK_RTTModel();
        TestCNN_ACK_RTT_FromNs3(ptModel,in);
        if(ptModel)
            delete ptModel;
        return 0;
    }


    if (test_type == BIG_TEST_CNN_ACK_SND_RTT)    
    {
        ptModel = new CNNModel();
        
        BigTestCNN_ACK_SND_RTT(ptModel);

        if(ptModel)
            delete ptModel;

        return 0;
    }

    if(test_type ==BIG_TEST_CNN_ACK_RTT)
    {
        ptModel = new CNN_ACK_RTTModel();
        
        BigTestCNN_ACK_RTT(ptModel);

        if(ptModel)
            delete ptModel;

        return 0;

    }

    if(test_type ==AVERAGE_TIME_TEST)
    {
        ptModel = new CNN_ACK_RTTModel();
        
        AverageTest(ptModel);

        if(ptModel)
            delete ptModel;

        return 0;

    }




    ptModel = new MLPModel();
    ptModel->keras2c_model_initialize();

    k2c_tensor myInput,myOutput;

    float kerasarray[NUMTESTE][3] ={{0.34607658,0.8471641,0.88461536},
                                    {0.07397943,0.05546552,0.9392713},
                                    {0.03154556,0.00609445,0.88866395},
                                    {0.03423448,0.00624618,0.9372469},
                                    {0.24825948,0.23142174,0.9615384},
                                    {0.03226006,0.06410623,0.8562753},
                                    {0.05676125,0.11398052,0.9251012},
                                    {0.3504803,0.34982705,0.92712545},
                                    {0.5209555,0.6000636,0.95546556},
                                    {0.03154682,0.03149462,0.93117404},
                                    {0.4907967,0.47373784,0.93319833},
                                    {0.13473004,0.12939872,0.8765182},
                                    {0.38282362,0.23075421,0.9392713},
                                    {0.358018,0.61572343,0.9919028},
                                    {0.12006561,0.1534984,0.8825911},
                                    {0.40851563,0.7163719,0.979757},
                                    {0.5386587,0.50438213,0.9251012},
                                    {0.15529582,0.64911336,0.8562753},
                                    {0.03244964,0.00310354,0.9453441},
                                    {0.8013233,0.84047633,0.8562753}
                                    };




    float  kerasprevision[NUMTESTE] = {0.08693514,
                                    0.96083295,
                                    0.25547132,
                                    0.9643034,
                                    0.9796477,
                                    0.0210398,
                                    0.90623903,
                                    0.50482726,
                                    0.8169838,
                                    0.94521517,
                                    0.3632805,
                                    0.05183066,
                                    0.60677016,
                                    0.9985879,
                                    0.10593946,
                                    0.9946059,
                                    0.15288067,
                                    0.03036362,
                                    0.98268235,
                                    0.00015479
                                    };





    //float kerasarray[] = {0.10858772,0.43363177,0.94129555,0.72319206,0.69356146,0.93117409,0.0556843,0.11762462,0.93522267};
    //float  kerasprevision =0.5328561;

    //float kerasarray[] = {0.03460024,0.10421212,0.93522267,0.47518336,0.47817113,0.94534413,0.17758868,0.76031619,0.93319838};

    //float  kerasprevision =0.5068154;

    float myfloatOutput[1] = {0};

    printf("###(  keras , keras2c,  erro  )\n");
    clock_t t0 = clock(); 
    for(int i=0; i<NUMTESTE;i++)
    {

            myInput.array = kerasarray[i];
            myInput.ndim = 1;
            myInput.numel = 3;
            myInput.shape[0] = 3;
            myInput.shape[1] = 1;
            myInput.shape[2] = 1;  //k2c_tensor test1_dense_68_input_1_input = {&test1_dense_68_input_1_input_array[0],1,3,{3,1,1,1,1}}; 
            myInput.shape[3] = 1;
            myInput.shape[4] = 1;


            myfloatOutput[1] = {0};
            myOutput.array=myfloatOutput;
            myOutput.ndim=1;
            myOutput.numel=1;
            myOutput.shape[0]=1;
            myOutput.shape[1]=1;
            myOutput.shape[2]=1;      // k2c_tensor c_dense_70_1_test1 = {&c_dense_70_1_test1_array[0],1,1,{1,1,1,1,1}}; 

            myOutput.shape[3]=1;
            myOutput.shape[4]=1;



            ptModel->keras2c_model(&myInput,&myOutput); 

            //printf("%3d(%f,%f,%e)\n", i,kerasprevision[i], myOutput.array[0],fabsf(kerasprevision[i]-myOutput.array[0]));

    }
    clock_t t1 = clock(); 
    printf("Average time over 20 tests (with print): %e s \n", 
    ((double)t1-t0)/(double)CLOCKS_PER_SEC/(double)20); 


    ptModel->keras2c_model_terminate();
//===================================================================================
//LSTM
//===================================================================================
    delete ptModel;

    ptModel = new LSTMModel();
    ptModel->keras2c_model_initialize();





float kerasarray_LSTM[NUMTESTE][9] ={{0.65501175,0.67588174,0.85425101,0.56352266,0.55621223,0.9291498,0.03155329,0.03149462,0.88461538},
                                {0.56352266,0.55621223,0.9291498,0.03155329,0.03149462,0.88461538,0.32538603,0.37631673,0.94331984},
                                {0.03155329,0.03149462,0.88461538,0.32538603,0.37631673,0.94331984,0.55511585,0.44135229,0.93522267},
                                {0.32538603,0.37631673,0.94331984,0.55511585,0.44135229,0.93522267,0.53900254,0.64567665,0.92307692},
                                {0.55511585,0.44135229,0.93522267,0.53900254,0.64567665,0.92307692,0.03210959,0.00352612,0.93319838},
                                {0.53900254,0.64567665,0.92307692,0.03210959,0.00352612,0.93319838,0.3680289,0.86928026,0.94129555},
                                {0.03210959,0.00352612,0.93319838,0.3680289,0.86928026,0.94129555,0.3039542,0.29426897,0.93117409},
                                {0.3680289,0.86928026,0.94129555,0.3039542,0.29426897,0.93117409,0.6457895,0.67724669,0.85425101},
                                {0.3039542,0.29426897,0.93117409,0.6457895,0.67724669,0.85425101,0.04668712,0.17646818,0.9291498},
                                {0.6457895,0.67724669,0.85425101,0.04668712,0.17646818,0.9291498,0.27943566,0.28029994,0.93927126},
                                {0.04668712,0.17646818,0.9291498,0.27943566,0.28029994,0.93927126,0.07447438,0.07433622,0.9291498},
                                {0.27943566,0.28029994,0.93927126,0.07447438,0.07433622,0.9291498,0.37345783,0.35216179,0.97975709},
                                {0.07447438,0.07433622,0.9291498,0.37345783,0.35216179,0.97975709,0.15853535,0.00705526,0.89068826},
                                {0.37345783,0.35216179,0.97975709,0.15853535,0.00705526,0.89068826,0.03154572,0.03148927,0.8562753},
                                {0.15853535,0.00705526,0.89068826,0.03154572,0.03148927,0.8562753,0.03154556,0.03148832,0.93927126},
                                {0.03154572,0.03148927,0.8562753,0.03154556,0.03148832,0.93927126,0.62510528,0.59482266,0.86842105},
                                {0.03154556,0.03148832,0.93927126,0.62510528,0.59482266,0.86842105,0.43998044,0.48919616,0.8582996},
                                {0.62510528,0.59482266,0.86842105,0.43998044,0.48919616,0.8582996,0.03962083,0.03954716,0.93522267},
                                {0.43998044,0.48919616,0.8582996,0.03962083,0.03954716,0.93522267,0.03154524,0.00405856,0.93724696},
                                {0.03962083,0.03954716,0.93522267,0.03154524,0.00405856,0.93724696,0.35445813,0.3382337,0.87246964}
                                };




 float kerasprevision_LSTM[NUMTESTE] = {0.09087843,
                                   0.90842015,
                                   0.3239425,
                                   0.288754,
                                   0.99481535,
                                   0.85941803,
                                   0.8518011,
                                   0.01508485,
                                   0.98192215,
                                   0.8880469,
                                   0.9851031,
                                   0.9933365,
                                   0.03627208,
                                   0.00256925,
                                   0.99862915,
                                   0.02791551,
                                   0.0051941,
                                   0.99431455,
                                   0.99649554,
                                   0.00908093
                                   };





//float kerasarray[] = {0.10858772,0.43363177,0.94129555,0.72319206,0.69356146,0.93117409,0.0556843,0.11762462,0.93522267};
//float  kerasprevision =0.5328561;

//float kerasarray[] = {0.03460024,0.10421212,0.93522267,0.47518336,0.47817113,0.94534413,0.17758868,0.76031619,0.93319838};

//float  kerasprevision =0.5068154;

float myfloatOutput_LSTM[1] = {0};

printf("###(  keras , keras2c,  erro  )\n");

for(int i=0; i<NUMTESTE;i++)
{

        myInput.array = kerasarray_LSTM[i];
        myInput.ndim = 2;//-------------------------------------------------------------------------------|
        myInput.numel = 9;//------------------------------------------------------------------------------|-|
                        //                                                                                | |
                        //k2c_tensor test9_lstm_24_input_1_input = {&test9_lstm_24_input_1_input_array[0],2,9,{3,3,1,1,1}}; 
                        //                     sÃ³ olhar o padrÃ£o nas primeiras linhas                          | | | | |
        myInput.shape[0] = 3;//--------------------------------------------------------------------------------| | | | |
        myInput.shape[1] = 3;//----------------------------------------------------------------------------------| | | |
        myInput.shape[2] = 1;//------------------------------------------------------------------------------------| | |
        myInput.shape[3] = 1;//--------------------------------------------------------------------------------------| |
        myInput.shape[4] = 1;//----------------------------------------------------------------------------------------|


        myfloatOutput_LSTM[1] = {0};
        myOutput.array=myfloatOutput_LSTM;
        myOutput.ndim=1;//-------------------------------------------------------------------------------|
        myOutput.numel=1;//------------------------------------------------------------------------------|-|
                                       //k2c_tensor c_client_0_13_test1 = {&c_client_0_13_test1_array[0],1,1,{1,1,1,1,1}}; 
        myOutput.shape[0]=1;//                                                                                | | | | |
        myOutput.shape[1]=1;//--------------------------------------------------------------------------------| | | | |
        myOutput.shape[2]=1;//------------------------------------------------------------------------------------| | |
        myOutput.shape[3]=1;//--------------------------------------------------------------------------------------| |
        myOutput.shape[4]=1;//----------------------------------------------------------------------------------------|



        ptModel->keras2c_model(&myInput,&myOutput); 

        printf("%3d(%f,%f,%e)\n", i,kerasprevision_LSTM[i], myOutput.array[0],fabsf(kerasprevision_LSTM[i]-myOutput.array[0]));

}

ptModel->keras2c_model_terminate();
delete ptModel;

//===================================================================================
//CNN_ACK_RTT_Round0000001
//===================================================================================

cout  << "CNN_ACK_RTT_Round0000001\n";

ptModel = new CNN_ACK_RTTModel();

ptModel->keras2c_model_initialize();


float kerasarray_CNN[5][9] ={{0.07898656,0.84661356,0.04703375,0.92629484,0.10364646,0.8924303},
                                {0.04703375,0.92629484,0.10364646,0.8924303,0.54890271,0.85657372},
                                {0.10364646,0.8924303,0.54890271,0.85657372,0.04905925,0.85059763},
                                {0.54890271,0.85657372,0.04905925,0.85059763,0.03014682,0.85258966},
                                {0.04905925,0.85059763,0.03014682,0.85258966,0.79197261,0.86454185}
                                
                                
                                };




float  kerasprevision_CNN[5] = {0.00039888,
                                3.3225254e-12,
                                1.3601063e-13,
                                3.6684788e-13,
                                1.8009473e-10
                                };





//float kerasarray[] = {0.10858772,0.43363177,0.94129555,0.72319206,0.69356146,0.93117409,0.0556843,0.11762462,0.93522267};
//float  kerasprevision =0.5328561;

//float kerasarray[] = {0.03460024,0.10421212,0.93522267,0.47518336,0.47817113,0.94534413,0.17758868,0.76031619,0.93319838};

//float  kerasprevision =0.5068154;

float myfloatOutput_CNN[1] = {0};

printf("###(  keras , keras2c,  erro  )\n");

for(int i=0; i<5;i++)
{

        myInput.array = kerasarray_CNN[i];
        myInput.ndim = 3;
        myInput.numel = 6;
        myInput.shape[0] = 3;
        myInput.shape[1] = 2;
        myInput.shape[2] = 1;
        myInput.shape[3] = 1;
        myInput.shape[4] = 1;



        myfloatOutput_CNN[1] = {0};
        myOutput.array=myfloatOutput_CNN;
        myOutput.ndim=1;
        myOutput.numel=1;
        myOutput.shape[0]=1;
        myOutput.shape[1]=1;
        myOutput.shape[2]=1;
        myOutput.shape[3]=1;
        myOutput.shape[4]=1;



        ptModel->keras2c_model_Round0000001(&myInput,&myOutput); 

        printf("%3d(%f,%f,%e)\n", i,kerasprevision_CNN[i], myOutput.array[0],fabsf(kerasprevision_CNN[i]-myOutput.array[0]));

}

cin>>c;

ptModel->keras2c_model_terminate();
delete ptModel;
//===================================================================================

//===================================================================================
//CNN_ACK_SND_RTT_Round0000001
//===================================================================================

cout  << "CNN_ACK_SND_RTT_Round0000001\n";

ptModel = new CNNModel();

ptModel->keras2c_model_initialize();


float kerasarray_CNN_ACK_SND_RTT_Round0000001[5][9] ={{0.02984375,0.02899584,0.9302789,0.46174552,0.44785095,0.84462153,0.45687353,0.43238892,0.91035858},
                                {0.46174552,0.44785095,0.84462153,0.45687353,0.43238892,0.91035858,0.35666119,0.58495925,0.87848607},
                                {0.45687353,0.43238892,0.91035858,0.35666119,0.58495925,0.87848607,1.19725972,1.13985416,0.91832671},
                                {0.35666119,0.58495925,0.87848607,1.19725972,1.13985416,0.91832671,0.02984301,0.00931213,0.93426297},
                                {1.19725972e+00,1.13985416e+00,9.18326712e-01,2.98430064e-02,9.31213119e-03,9.34262968e-01,3.12762526e-02,1.02466237e-03,8.60557787e-01}
                                
                                
                                };




float  kerasprevision_CNN_ACK_SND_RTT_Round0000001[5] = {0.82483304,1.1693143e-06,0.8949874,0.9916374,1.534111e-09};




float myfloatOutput_CNN_ACK_SND_RTT_Round0000001[1] = {0};

printf("###(  keras , keras2c,  erro  )\n");

for(int i=0; i<5;i++)
{

        myInput.array = kerasarray_CNN_ACK_SND_RTT_Round0000001[i];
        myInput.ndim = 3;
        myInput.numel = 9;
        myInput.shape[0] = 3;
        myInput.shape[1] = 3;
        myInput.shape[2] = 1;
        myInput.shape[3] = 1;
        myInput.shape[4] = 1;

        myfloatOutput_CNN_ACK_SND_RTT_Round0000001[1] = {0};
        myOutput.array=myfloatOutput_CNN_ACK_SND_RTT_Round0000001;
        myOutput.ndim=1;
        myOutput.numel=1;
        myOutput.shape[0]=1;
        myOutput.shape[1]=1;
        myOutput.shape[2]=1;
        myOutput.shape[3]=1;
        myOutput.shape[4]=1;



        ptModel->keras2c_model_Round0000001(&myInput,&myOutput); 

        printf("%3d(%f,%f,%e)\n", i,kerasprevision_CNN_ACK_SND_RTT_Round0000001[i], myOutput.array[0],fabsf(kerasprevision_CNN_ACK_SND_RTT_Round0000001[i]-myOutput.array[0]));

}

cin>>c;

ptModel->keras2c_model_terminate();
delete ptModel;
//===================================================================================

//MLP_SND_RTT_Round0000001
//===================================================================================

//===================================================================================
//MLP_SND_RTT_Round0000001
//===================================================================================

cout  << "MLP_SND_RTT_Round0000001\n";

ptModel = new MLP_SND_RTTModel();

ptModel->keras2c_model_initialize();


float kerasarray_MLP_SND_RTT_Round0000001[5][9] ={{0.12546836,0.876494},{0.14692049,0.8486056},{0.26476684,0.92231077},
                                                   {0.07192839,0.9262948},{0.11553394,0.8486056}
                                };




float  kerasprevision_MLP_SND_RTT_Round0000001[5] = {5.885738e-06,6.982638e-10,0.8340545,0.85185635,6.9162837e-10};




float myfloatOutput_MLP_SND_RTT_Round0000001[1] = {0};

printf("###(  keras , keras2c,  erro  )\n");

for(int i=0; i<5;i++)
{

        myInput.array = kerasarray_MLP_SND_RTT_Round0000001[i];
        myInput.ndim = 1;
        myInput.numel = 2;
        myInput.shape[0] = 2;
        myInput.shape[1] = 1;
        myInput.shape[2] = 1;  //k2c_tensor test1_dense_8_input_input = {&test1_dense_8_input_input_array[0],1,2,{2,1,1,1,1}};; 
        myInput.shape[3] = 1;
        myInput.shape[4] = 1;

        myfloatOutput_MLP_SND_RTT_Round0000001[1] = {0};
        myOutput.array=myfloatOutput_MLP_SND_RTT_Round0000001;
        myOutput.ndim=1;
        myOutput.numel=1;
        myOutput.shape[0]=1;
        myOutput.shape[1]=1;
        myOutput.shape[2]=1;
        myOutput.shape[3]=1;
        myOutput.shape[4]=1;



        ptModel->keras2c_model_Round0000001(&myInput,&myOutput); 

        printf("%3d(%f,%f,%e)\n", i,kerasprevision_MLP_SND_RTT_Round0000001[i], myOutput.array[0],fabsf(kerasprevision_MLP_SND_RTT_Round0000001[i]-myOutput.array[0]));

}

cin>>c;

ptModel->keras2c_model_terminate();
delete ptModel;
//===================================================================================




//===================================================================================
//MLP_SND_RTT
//===================================================================================

    ptModel = new MLP_SND_RTTModel();
    ptModel->keras2c_model_initialize();



    float kerasarray_MLP_SND_RTT[NUMBIGTESTE][2] ={{0.97996193,0.86842096}, 
{0.5356499 ,0.85829955},
{0.8618809,0.8562753},
{0.81544447,0.9149797 },
{0.03148659,0.9372469 },
{0.12137766,0.9291498 },
{0.03148659,0.8663967 }, 
{0.42302078,0.9352227 },
{0.02015898,0.9635627 },
{0.05717965,0.9372469 },
{0.49294624,0.9291498 },
{0.03148659,0.85425097}, 
{0.00280468,0.94331986},
{0.03228462,0.8724696 }, 
{0.3649406,0.9372469},
{0.3483787 ,0.86234814}, 
{0.67309517,0.86234814}, 
{0.4884074 ,0.86234814}, 
{0.5236834 ,0.99392706},
{0.53191715,0.85425097}, 
{0.02771796,0.93319833},
{0.0032364,0.9493927},
{0.5479376,0.8603239}, 
{0.0091904,0.9352227},
{0.27295727,0.85425097}, 
{0.43325078,0.85829955}, 
{0.584081 ,0.8562753}, 
{0.03781209,0.92712545},
{0.42741004,0.94331986}, 
{0.5501826, 1.       }, 
{0.44429943,0.9372469 },
{0.37114662,0.92712545}, 
{0.03148659,0.92307687},
{0.6785046,0.8906882}, 
{0.08322504,0.9149797 },
{0.49961665,0.90485823}, 
{0.11796719,0.95546556},
{0.13859358,0.93117404},
{0.44034314,0.9352227 },
{0.6549636,0.9190283},
{0.00683813,0.9959514 },
{0.17559916,0.9352227 },
{0.55390114,0.88461536}, 
{0.6880135 ,0.92307687}, 
{0.1738233,0.8643725}, 
{0.09973001,0.99392706},
{0.4182506,0.8724696}, 
{0.4811356,0.9149797}, 
{0.58781844,0.8724696 }, 
{0.4242598 ,0.85425097}, 
{0.51216406,0.98582995},
{0.01159519,0.86234814}, 
{0.37366554,0.9676113 },
{0.55066425,0.90080965}, 
{0.03152406,0.8562753 }, 
{0.23375174,0.9372469 },
{0.5842621 ,0.92712545}, 
{0.9133095,0.9372469},
{0.07178943,0.9352227 },
{0.13028932,0.9352227 },
{0.6256024 ,0.93319833},
{0.20516191,0.8947368 }, 
{0.2671165 ,0.91295546}, 
{0.1927184,0.9635627}, 
{0.20792171,0.9534413 }, 
{0.70010597,0.9716599 },
{0.03148659,0.8805668 }, 
{0.24951707,0.93319833},
{0.1511761 ,0.92712545},
{0.12610851,0.85425097}, 
{0.48982745,0.89271253}, 
{0.16303442,0.85425097}, 
{0.5856506,0.8765182}, 
{0.13904653,0.93319833},
{0.41803172,0.902834  }, 
{6.4083404e-04, 9.3927127e-01},
{0.56650513,0.9372469 },
{0.618033  ,0.90485823}, 
{0.129593 ,0.8562753}, 
{0.38082248,0.92105263},
{0.500281 ,0.9251012}, 
{0.25210527, 1.        },
{0.71068704,0.93117404},
{0.65666074,0.88866395}, 
{0.1250427,0.8744939}, 
{0.33098707,0.9352227 },
{0.50067776,0.9473683 },
{0.04316466,0.9453441 },
{0.34234425,0.94331986},
{0.22900513,0.86842096}, 
{0.3715953,0.8805668}, 
{0.08816466,0.8744939 }, 
{0.4339183,0.9412955},
{0.03148659,0.9392713 },
{0.6706565,0.9251012}, 
{0.11306426,0.8765182 }, 
{0.03148659,0.9493927 },
{0.30421242,0.8724696 }, 
{0.7543133,0.9392713}, 
{0.27699858,0.9493927 },
{0.5655133 ,0.95951414}, 
{0.07146512,0.9372469 },
{0.3439784,0.9291498}, 
{0.27434424,0.87854254}, 
{0.25783268,0.8825911 }, 
{0.43370575,0.98987854},
{0.4281909,0.9716599},
{0.1541393 ,0.92712545},
{0.0126276,0.8643725}, 
{0.17208838,0.85829955}, 
{0.5716627,0.8866396}, 
{0.00101161,0.9473683 },
{0.20783354,0.9291498 },
{0.52316546,0.85829955}, 
{0.8340735 ,0.89271253}, 
{0.02539157,0.9412955 },
{0.318394 ,0.9372469},
{0.0051789,0.9352227},
{0.03148817,0.8562753 }, 
{0.1430151 ,0.86234814}, 
{0.5289149 ,0.92712545},
{0.3706948 ,0.93319833},
{0.17725219,0.9412955 },
{0.4539123,0.8704453}, 
{0.15184109,0.8562753 }, 
{0.51606524,0.9696356 },
{0.02066355,0.91093117}, 
{0.51838577,0.8643725 }, 
{0.37280124,0.9392713 },
{0.4527284,0.8603239}, 
{0.26331922,0.9392713 },
{0.5858852,0.9251012}, 
{0.5833065,0.8744939}, 
{0.2663136,0.9716599},
{0.02271175,0.9352227 },
{0.00255156,0.9453441 },
{0.44808725,0.92105263},
{0.5447542,0.8724696}, 
{0.00374886,0.94331986},
{0.79698545,0.92712545},
{0.00455715,0.9392713 },
{0.0378324,0.8724696}, 
{0.13490683,0.8744939 }, 
{0.3310075,0.9291498},
{0.3397608,0.8643725}, 
{0.2315225,0.9696356},
{0.26256353,0.9291498 },
{0.05069011,0.9372469 },
{0.83275425,0.9838056 },
{0.19603552,0.9352227 },
{0.08834382,0.8663967 }, 
{0.0037896,0.9392713},
{0.58185333,0.92712545},
{0.37051848,0.9291498 },
{0.45796618,0.8724696 }, 
{0.62015676,0.9736842 },
{0.13788892,0.8562753 }, 
{0.42026412,0.9372469 }, 
{0.07606042,0.9352227 },
{0.10933672,0.8724696 }, 
{0.9416679,0.8724696}, 
{0.2854669,0.9251012},
{0.45550865,0.9372469 },
{0.04205664,0.92712545},
{0.64474934,0.92712545},
{0.30316395,0.8643725 }, 
{0.5279074,0.9493927},
{0.10537445,0.88866395}, 
{0.00656647,0.9372469 },
{0.44383973,0.88866395}, 
{0.2188948 ,0.85425097}, 
{0.5429532,0.9574899}, 
{0.16701747,0.8663967 }, 
{0.97512245,0.9615384 }, 
{0.37777454,0.9777328 },
{0.34424606,0.93117404},
{0.09901982,0.8825911 }, 
{0.44798335,0.8744939 }, 
{0.40745068,0.8704453 }, 
{0.02877638,0.9291498 },
{0.46186107,0.8663967 }, 
{0.61352724,0.9149797 },
{0.39420268,0.9534413 },
{0.44470873,0.9473683 }, 
{0.19168565,0.9453441 },
{0.45926028,0.9919028 },
{0.5021907,0.9291498},
{0.03753391,0.8663967 }, 
{0.07359314,0.9372469 },
{0.15314558,0.9251012 },
{0.5129402,0.9372469}, 
{0.48627895,0.8744939 }, 
{0.60200477,0.8724696 }, 
{0.8675737 ,0.90485823}, 
{0.07506686,0.92307687}, 
{0.3188537,0.8603239}, 
{0.0617419 ,0.92712545},
{0.5176175,0.9372469}, 
{0.23738529,0.94331986},
{0.02780959,0.85829955}, 
{0.48261076,0.98582995},
{0.50019443,0.91295546}, 
{0.5824044,0.9190283}, 
{0.17653587,0.94331986},
{0.16103818,0.9392713 },
{0.9369402 ,0.94331986}, 
{0.47847813,0.8603239 }, 
{0.03148659,0.9291498 },
{0.06590096,0.86842096}, 
{0.06301365,0.93319833},
{0.5427517,0.8987854}, 
{0.48946065,0.9291498 },
{0.8382644,0.9372469}, 
{0.75728405,0.9696356 },
{0.02267082,0.9372469 },
{0.3862728 ,0.92307687}, 
{0.09610164,0.9473683 }, 
{0.16525109,0.9615384 },
{0.4653608,0.8603239}, 
{0.08602357,0.96558696}, 
{0.25997376,0.9696356 },
{0.12665293,0.9453441 },
{0.14654347,0.92307687},
{0.40662098,0.8704453 }, 
{0.56675863,0.9291498 },
{0.12840311,0.85829955}, 
{0.16305804,0.8663967 }, 
{0.10066546,0.8643725 }, 
{0.05793722,0.9352227 },
{0.0762928 ,0.93117404},
{0.31581682,0.85425097}, 
{0.94293684,0.9838056 },
{0.36672592,0.8825911 }, 
{0.62470496,0.99797565},
{0.32114905,0.9372469 }, 
{0.78272676,0.902834  }, 
{0.11100803,0.88866395}, 
{0.36825615,0.9392713 },
{0.56871396,0.9291498 },
{0.23756792,0.85425097}, 
{0.40501046,0.9352227 },
{0.49234167,0.85425097}, 
{0.5486334 ,0.93117404},
{0.5477628 ,0.98582995},
{0.00260043,0.8967612 }, 
{0.92064744,0.9412955 }, 
{0.7484536 ,0.95141697},
{0.03148659,0.8562753 }, 
{0.40133283,0.9615384 },
{0.3442051 ,0.96558696},
{0.31631428,0.9291498 }, 
{0.4319441 ,0.92105263}, 
{0.57032293,0.94331986},
{0.06300294,0.9372469 },
{0.6400233 ,0.86234814}, 
{0.53468484,0.90080965}, 
{0.00121715,0.9473683 },
{0.37270364,0.90485823}, 
{0.06953342,0.9412955 },
{0.00138549,0.9453441 },
{0.11339676,0.9392713 },
{0.7393414 ,0.98987854},
{0.0655724 ,0.92307687},
{0.4951377 ,0.92712545},
{0.06449178,0.93117404},
{0.050439  ,0.93319833},
{0.56400204,0.91700405}, 
{0.1334153,0.8906882}, 
{0.10815093,0.9372469 },
{0.07717679,0.8562753 }, 
{0.2981969 ,0.93117404},
{0.65024066,0.9716599 }, 
{0.6031351 ,0.85829955}, 
{0.21795334,0.8866396 }, 
{0.46351728,0.9352227 },
{0.2017771 ,0.93117404},
{0.12648243,0.93319833},
{0.503924 ,0.8765182}, 
{0.00453586,0.9473683 },
{0.3909454,0.9068826}, 
{0.65107185,0.9412955 }, 
{0.62376356,0.85425097}, 
{0.45008036,0.93117404},
{0.0060697,0.8643725}, 
{0.40756717,0.9615384 },
{0.41537586,0.9736842 },
{0.46505383,0.902834  }, 
{0.49795887,0.86842096}, 
{0.0774131,0.9392713}, 
{0.4515996 ,0.85425097}, 
{0.34251115,0.85425097}, 
{0.06297319,0.9412955 },
{2.0203214e-04, 9.4736832e-01},
{0.5930673,0.8825911}, 
{0.64908034,0.9676113 }, 
{0.4081308 ,0.88866395}, 
{0.8096588 ,0.89271253}, 
{0.5361332,0.9412955},
{0.2711027 ,0.91093117}, 
{0.15159534,0.9372469 },
{0.05149081,0.93319833},
{0.6055108 ,0.87854254}, 
{0.43628767,0.99797565},
{0.12648243,0.93319833},
{0.285215 ,0.9696356},
{0.01622221,0.9352227 },
{0.8122313,0.9190283}, 
{0.8820182,0.9291498},
{0.0610906,0.9736842},
{0.67556685,0.93319833},
{0.53003895,0.9959514 },
{0.44293132,0.9372469 },
{0.06174111,0.93117404},
{0.7184611 ,0.85425097}, 
{0.6422572,0.8562753}, 
{8.379810e-04, 8.765182e-01}, 
{0.48725814,0.8805668 }, 
{0.01324033,0.9372469 },
{0.00609445,0.88866395}, 
{0.50706637,0.9676113 }, 
{1.8874794e-04, 9.7165990e-01},
{0.41712022,0.8663967 }, 
{0.03828895,0.92712545},
{0.0226768 ,0.93117404},
{0.07334848,0.9068826 }, 
{0.5629299,0.8562753}, 
{0.1746325 ,0.98987854},
{0.14257303,0.9291498 },
{0.12909566,0.9615384 },
{0.5499086,0.8663967}, 
{0.6935803 ,0.97570854},
{0.58736193,0.8765182 }, 
{0.48887655,0.85829955}, 
{0.11415795,0.93319833},
{0.35596064,0.92712545},
{0.1803552,0.9392713},
{0.01721734,0.9352227 },
{0.16511884,0.8866396 }, 
{0.43962365,0.8906882 }, 
{0.03148659,0.85829955}, 
{0.42553657,0.88866395}, 
{0.5326807 ,0.93319833},
{0.0318161,0.9352227},
{0.47603163,0.92105263}, 
{0.45406973,0.8967612 }, 
{0.37461802,0.9412955 }, 
{0.6772498,0.8643725}, 
{0.53520906,0.9534413 }, 
{0.03154106,0.9291498 },
{0.07303157,0.9352227 },
{0.66063905,0.8906882 }, 
{0.68238056,0.91093117}, 
{0.40067002,0.92712545}, 
{0.26955357,0.9291498 },
{0.5120287,0.8562753}, 
{0.42116466,0.9372469 },
{0.61553293,0.8603239 }, 
{0.00564246,0.8663967 }, 
{0.6657462,0.8643725}, 
{0.7687861,0.9372469},
{4.546176e-05, 9.534413e-01},
{0.54602003,0.86842096}, 
{0.56213325,0.92712545},
{0.53998405,0.8643725 }, 
{0.01834598,0.9453441 },
{0.09591414,0.93117404},
{0.1133881 ,0.93319833},
{0.48013276,0.97570854},
{0.00606559,0.8724696 }, 
{0.467716 ,0.9919028},
{0.48268473,0.8947368 }, 
{0.0886727,0.9352227},
{0.8199345 ,0.93117404},
{0.826638 ,0.9736842}, 
{0.54425836,0.9412955 }, 
{0.4774611,0.9473683},
{0.3153886,0.9372469}, 
{0.8186514,0.9473683},
{9.1441633e-04, 9.4331986e-01},
{0.00454052,0.9412955 },
{0.00453632,0.9392713 },
{0.03148659,0.9412955 },
{0.6514151 ,0.95546556}, 
{0.1986253,0.9372469},
{0.6020331,0.8663967}, 
{0.7731328,0.9838056}, 
{0.7051548,0.9251012},
{0.0011155,0.8805668}, 
{0.6160887,0.9291498},
{0.3332824,0.8825911}, 
{0.48804218,0.92712545},
{0.34201682,0.9392713 },
{0.00807294,0.94331986},
{0.52853394,0.9736842 },
{0.27658135,0.89271253}, 
{0.03073202,0.9352227 },
{0.07921822,0.93319833},
{0.33085638,0.9352227 },
{0.03782012,0.8765182 }, 
{0.86657083,0.8825911 }, 
{0.12605532,0.8744939 }, 
{0.5096499,0.8724696}, 
{0.11338905,0.9392713 },
{0.02580987,0.8744939 }, 
{0.7653288 ,0.85425097}, 
{0.4077545,0.9352227},
{0.03527317,0.85829955}, 
{0.03148659,0.9291498 },
{0.10076623,0.9291498 },
{0.11187265,0.9493927 },
{0.05391071,0.93319833},
{0.07155753,0.9473683 },
{0.03148675,0.8562753 }, 
{0.3212073,0.8825911}, 
{0.0405763,0.8603239}, 
{0.09445978,0.93319833},
{0.15540949,0.9716599 },
{0.5428965 ,0.92712545},
{0.55698365,0.9878542 },
{0.6397871 ,0.91295546}, 
{0.6118081,0.9716599}, 
{0.54974645,0.9534413 },
{0.508647 ,0.9635627}, 
{0.5335718 ,0.99392706},
{0.26121277,0.93117404},
{0.9057716 ,0.99392706},
{0.5341291 ,0.98582995}, 
{0.72937113,0.93319833}, 
{0.4826249,0.9534413},
{0.8531119,0.9392713},
{0.3123706,0.9352227},
{0.60208815,0.8663967 }, 
{0.94322807,0.8603239 }, 
{0.94404364,0.9089068 }, 
{0.49583355,0.9251012 },
{0.1805095 ,0.98987854},
{0.5074112,0.9291498},
{0.31363165,0.99797565},
{0.59152126, 1.        },
{0.01766477,0.8663967 }, 
{0.8623973,0.8643725}, 
{0.48270047,0.87854254}, 
{0.0315036 ,0.93319833},
{0.16395226,0.8562753 }, 
{0.10076607,0.9392713 },
{0.1284675 ,0.85829955}, 
{0.6421564,0.9615384}, 
{4.4526605e-05, 9.5141697e-01},
{0.00357566,0.9372469 },
{0.02144111,0.94331986},
{0.11360882,0.8947368 }, 
{8.075225e-04, 8.663967e-01}, 
{0.43882865,0.97570854}, 
{0.09455094,0.9534413 }, 
{0.50711834,0.8643725 }, 
{0.45061094,0.9190283 },
{0.12109885,0.9372469 },
{0.03152926,0.8825911 }, 
{0.84553784,0.9838056 },
{0.24470435,0.86234814}, 
{0.4983257 ,0.86842096}, 
{0.31411183,0.90080965}, 
{0.19735639,0.85829955}, 
{0.4062967,0.8866396}, 
{0.4683709,0.8603239}, 
{0.7833911 ,0.93117404}, 
{0.40726176,0.85425097}, 
{0.4351447,0.8704453}, 
{0.05739691,0.9392713 },
{0.47246262,0.85425097}, 
{0.57695717,0.88461536}, 
{0.6630431 ,0.93117404},
{0.22532277,0.9392713 },
{0.05343952,0.8663967 }, 
{0.5021765,0.9676113},
{0.4680655 ,0.86234814}, 
{0.38120502,0.8906882 }, 
{0.8930857 ,0.93117404},
{0.43687016,0.99392706}, 
{0.40343454,0.8603239 }, 
{0.55728745,0.9676113 },
{0.477565 ,0.9149797}, 
{0.13033418,0.93117404}, 
{0.29320785,0.9352227 },
{0.5443544 ,0.93117404},
{0.8397742,0.9291498}, 
{0.03148659,0.9392713 },
{0.02273489,0.9412955 },
{0.08090999,0.9412955 },
{8.063465e-04, 9.392713e-01},
{0.00270122,0.94331986},
{0.00474124,0.9473683 },
{0.76790756,0.96558696},
{0.06154495,0.9453441 },
{0.26484317,0.9534413 },
{0.36385277,0.97570854},
{0.56517017,0.85425097}, 
{0.3797582 ,0.93117404},
{0.38515186,0.89271253}, 
{0.03157208,0.9493927 },
{0.521917 ,0.9251012},
{0.17209312,0.9291498 },
{0.6830733 ,0.95546556},
{0.2996264,0.9412955},
{0.03148659,0.98987854},
{0.34094313,0.9716599 }, 
{0.44808885,0.89271253}, 
{0.03148659,0.92712545},
{9.0923521e-04, 9.4331986e-01},
{0.11765201,0.86234814}, 
{0.71776366,0.9736842 },
{0.03297008,0.85829955}, 
{0.59969205,0.9251012 },
{0.5890905 ,0.93117404},
{0.46566936,0.9736842 },
{0.14059676,0.9372469 },
{0.6981727 ,0.92712545},
{0.5899942 ,0.85425097}, 
{0.77061075,0.8765182 }, 
{0.00302311,0.87854254}, 
{0.06625786,0.86234814}, 
{0.18906124,0.92307687},
{0.08886634,0.9372469 },
{0.3085686,0.9372469},
{0.10842455,0.96558696},
{0.45391545,0.85425097}, 
{0.96672815,0.86842096}, 
{0.45919257,0.8562753 }, 
{0.7318193,0.9251012},
{0.2738011 ,0.93117404},
{0.4295574,0.9534413}, 
{0.01140715,0.93319833},
{0.34077308,0.9251012 }, 
{0.05405713,0.86234814}, 
{0.436072 ,0.8643725}, 
{0.4097429,0.9251012},
{0.08297047,0.92712545},
{0.70187706,0.8562753 }, 
{0.12675273,0.8947368 }, 
{0.13894388,0.93319833},
{0.1783747,0.8562753}, 
{0.44900984,0.8603239 }, 
{0.25096232,0.97570854},
{0.00352692,0.9412955 },
{0.15035242,0.9412955 },
{0.57579845,0.9635627 },
{0.04817228,0.9372469 }, 
{0.4431549 ,0.92712545}, 
{0.6032973 ,0.85829955}, 
{0.12363746,0.88866395}, 
{0.8704106,0.9574899}, 
{0.07784162,0.9392713 },
{0.02307747,0.96558696},
{0.5634872 ,0.85829955}, 
{0.3879715 ,0.93117404},
{0.52773887,0.9251012 }, 
{0.58162665,0.9716599 },
{0.03342081,0.9392713 },
{0.6389291 ,0.97570854}, 
{0.00121091,0.9352227 },
{0.7162019 ,0.93319833}, 
{0.1808574 ,0.94331986},
{0.6338991,0.8744939}, 
{0.33276293,0.91093117}, 
{0.31943777,0.8866396 }, 
{0.10425399,0.93319833},
{0.7728746 ,0.93319833},
{0.89806217,0.8663967 }, 
{0.50396657,0.85829955}, 
{0.45947754,0.9635627 },
{0.01844044,0.9352227 },
{0.17648551,0.93117404},
{0.38298243,0.91295546}, 
{0.44298172,0.9251012 },
{0.54528165,0.86234814}, 
{0.11020307,0.94331986},
{0.09951825,0.9372469 },
{0.5482036,0.9453441},
{0.2377647,0.9473683},
{0.44612724,0.979757  },
{0.07846569,0.9392713 },
{0.41925028,0.8866396 }, 
{0.24455321,0.98582995}, 
{0.03148659,0.8562753 }, 
{0.56114143,0.8765182 }, 
{0.58321035,0.98178136}, 
{0.68907464,0.92307687}, 
{0.00099985,0.9453441 },
{0.00504162,0.9392713 },
{0.77305096,0.8643725 }, 
{0.30594105,0.85425097}, 
{0.05473881,0.9493927 },
{0.03104546,0.9473683 },
{0.0098347 ,0.86842096}, 
{0.5433877 ,0.98582995},
{0.78519213,0.9453441 }, 
{0.6272869,0.9574899}, 
{0.08830792,0.92307687},
{0.3890625 ,0.85425097}, 
{0.03150706,0.93117404},
{2.429537e-04, 9.473683e-01},
{0.19287112,0.9251012 },
{0.85857636,0.93117404}, 
{0.76852787,0.85829955}, 
{0.11621402,0.9392713 },
{0.4647106,0.9392713},
{0.599437 ,0.9959514},
{0.15468402,0.9372469 },
{0.00112044,0.9352227 },
{0.20860183,0.979757  },
{0.25237292,0.9291498 },
{0.0151524,0.9412955},
{0.06713445,0.85425097}, 
{0.4952164,0.9635627},
{0.6680967,0.8663967}, 
{0.17586993,0.86842096}, 
{0.03892247,0.9392713 },
{0.47966674,0.9736842 }, 
{0.19371182,0.9412955 },
{0.01612523,0.94331986},
{0.473922 ,0.9777328},
{0.00705526,0.8906882 }, 
{0.20405042,0.89271253}, 
{0.38401204,0.8704453 }, 
{0.2968178,0.9251012},
{0.6937787,0.8805668}, 
{0.55185765,0.99797565},
{0.26075935,0.93117404},
{0.11418393,0.9392713 }, 
{0.05325674,0.9736842 },
{0.40947843,0.8866396 }, 
{0.6787297,0.9534413},
{0.39034715,0.9574899 },
{0.84942484,0.9251012 }, 
{0.14055645,0.8603239 }, 
{0.08903385,0.93117404},
{0.3356455,0.8825911}, 
{0.3859044,0.8765182}, 
{0.42269805,0.8562753 }, 
{0.07446249,0.902834  }, 
{0.07557097,0.93319833},
{0.50851786,0.88866395}, 
{0.27454892,0.92712545},
{0.34991682,0.9372469 },
{0.6139649 ,0.92712545}, 
{0.6582083,0.9736842}, 
{0.39586675,0.9392713 }, 
{0.6292973 ,0.99392706},
{0.16383891,0.9392713 },
{0.02304645,0.8704453 }, 
{0.13277078,0.93117404},
{0.00456474,0.9392713 },
{0.5834812,0.8603239}, 
{0.52497905,0.9352227 }, 
{0.07583404,0.85829955}, 
{0.42554602,0.9352227 },
{0.00326141,0.9493927 },
{0.6385386,0.9068826}, 
{0.55946004,0.92307687}, 
{0.02837131,0.8967612 }, 
{0.00302917,0.94331986},
{0.3453418 ,0.88461536}, 
{0.4934201,0.9251012}, 
{0.18539149,0.85425097}, 
{0.00526136,0.9372469 },
{0.26572165,0.86842096}, 
{0.08786019,0.9412955 },
{0.3533205 ,0.95546556},
{0.34483013,0.85829955}, 
{0.29917458,0.9473683 },
{0.8762388,0.8765182}, 
{0.46528524,0.88461536}, 
{0.45493245,0.8947368 }, 
{0.40976337,0.95546556}, 
{0.16355868,0.94331986},
{0.25201395,0.85829955}, 
{0.24291591,0.8643725 }, 
{0.00456167,0.9392713 },
{0.33643267,0.95546556},
{0.5708929,0.9635627},
{0.47496265,0.9838056 },
{0.6757999,0.8906882}, 
{0.13870898,0.85425097}, 
{0.6313062,0.8825911}, 
{0.09085268,0.9291498 },
{0.02015189,0.8805668 }, 
{0.4658032,0.8967612}, 
{0.06612184,0.92712545},
{0.8838932,0.9251012}, 
{0.28201437,0.92712545}, 
{0.19567816,0.8906882 }, 
{0.988679  ,0.85425097}, 
{0.55116963,0.95141697},
{0.70595145,0.9251012 },
{0.4872377 ,0.86234814}, 
{0.12876756,0.9372469 },
{0.41019946,0.8744939 }, 
{0.27639246,0.9453441 },
{0.74861574,0.8603239 }, 
{0.24226572,0.8643725 }, 
{0.45241508,0.9392713 }, 
{0.3037732,0.9493927},
{0.61434275,0.86842096}, 
{0.5253333 ,0.86842096}, 
{0.12881653,0.9453441 }, 
{0.03148659,0.9372469 },
{0.00640837,0.8663967 }, 
{0.11964905,0.9372469 },
{0.36895674,0.9838056 },
{0.10857349,0.9473683 },
{0.11019661,0.92712545},
{0.03148675,0.89271253}, 
{0.6825317,0.9251012},
{0.09663849,0.9615384 },
{0.97166836,0.93117404},
{0.4431423,0.8643725}, 
{0.52367556,0.85425097}, 
{0.11387157,0.9251012 },
{0.33848557,0.8805668 }, 
{0.7695465 ,0.85425097}, 
{0.40056613,0.9251012 },
{0.48716843,0.9412955 },
{0.39069352,0.8724696 }, 
{0.29589996,0.92307687},
{0.64717543,0.9291498 },
{0.53697234,0.9372469 },
{5.4016193e-05, 9.4736832e-01},
{0.7946633,0.8603239}, 
{0.53656614,0.93319833},
{0.21733305,0.9352227 },
{0.54224634,0.93117404},
{0.5802585 ,0.92105263}, 
{0.2933055 ,0.86234814}, 
{0.05021482,0.95546556},
{0.43201023,0.8603239 }, 
{0.12198473,0.93117404},
{0.09068139,0.9372469 },
{0.02287265,0.88461536}, 
{0.0630075 ,0.93319833},
{0.4203759 ,0.99797565},
{0.1513082,0.8562753}, 
{0.54081374,0.9251012 }, 
{0.44838008,0.9574899 },
{0.01404976,0.95951414},
{0.5414639 ,0.96558696},
{0.66520464,0.9716599 }, 
{0.6316494,0.9089068}, 
{0.5299178,0.9372469},
{0.49445757,0.94331986}, 
{0.01177077,0.9392713 },
{0.4370937,0.8704453}, 
{0.66999686,0.95951414}, 
{0.45736322,0.92712545},
{0.03162246,0.92712545},
{0.7472178 ,0.92712545},
{2.2166876e-04, 8.7449390e-01}, 
{0.49659076,0.86842096}, 
{0.0201552,0.9352227},
{0.51676106,0.91295546}, 
{0.8472884,0.9838056}, 
{0.6992086 ,0.85829955}, 
{2.419414e-04, 8.704453e-01}, 
{0.47295853,0.8603239 }, 
{0.15118429,0.85425097}, 
{0.47537354,0.86842096}, 
{0.41777825,0.9574899 },
{0.09409516,0.99797565}, 
{0.03148659,0.9291498 },
{0.03209208,0.8643725 }, 
{0.5179261 ,0.86234814}, 
{0.15903406,0.8663967 }, 
{0.5879413,0.9291498}, 
{0.55589736,0.9372469 },
{0.33655232,0.8744939 }, 
{0.5262873,0.8562753}, 
{0.25367802,0.93319833},
{0.587502  ,0.92712545},
{0.557892  ,0.86234814}, 
{0.11718286,0.8744939 }, 
{0.60264707,0.91700405}, 
{0.58303094,0.98987854}, 
{0.29191378,0.8744939 }, 
{0.0042729,0.8663967}, 
{0.5369519,0.8866396}, 
{0.4829193 ,0.98178136},
{0.36343557,0.88866395}, 
{0.17409094,0.92307687}, 
{0.9674539 ,0.93117404}, 
{0.01218062,0.8825911 }, 
{0.21283992,0.95951414}, 
{0.60303277,0.9089068 }, 
{0.33174744,0.93319833},
{0.0025203,0.9412955},
{0.7012363,0.8724696}, 
{0.02038159,0.86842096}, 
{0.13857722,0.93117404},
{0.01290095,0.9412955 },
{0.8117291,0.9251012}, 
{0.5396818,0.9493927}, 
{0.02141702,0.9291498 },
{0.58096856,0.9574899 }, 
{0.04247856,0.87854254}, 
{0.40552056,0.92105263},
{5.1218295e-04, 9.4331986e-01},
{0.21658367,0.97570854}, 
{0.562974 ,0.9534413},
{0.21286826,0.93117404},
{0.10963962,0.8744939 }, 
{0.25330648,0.93117404},
{0.3860949,0.8805668}, 
{0.503691  ,0.86842096}, 
{0.46869838,0.8805668 }, 
{0.14226665,0.9352227 },
{0.9117604 ,0.86234814}, 
{0.12512755,0.93117404},
{0.39690265,0.8704453 }, 
{0.71526206,0.9190283 }, 
{0.8792048 ,0.91700405}, 
{0.62207586,0.8663967 }, 
{0.4895126,0.8744939}, 
{0.17975537,0.9291498 },
{0.01660146,0.87854254}, 
{0.01390519,0.9412955 },
{0.02940659,0.99797565},
{0.1039511 ,0.92712545},
{0.17192309,0.85425097}, 
{0.00295887,0.9534413 },
{0.4308909 ,0.92105263}, 
{0.64046717,0.9190283 }, 
{0.25209582,0.8562753 }, 
{0.6748064,0.9372469},
{0.50308806,0.85425097}, 
{0.1192084,0.979757 },
{0.23375489,0.9676113 },
{0.08136576,0.9878542 }, 
{0.04735757,0.9453441 },
{0.05051961,0.9392713 },
{0.96916676,0.90080965}, 
{0.06500501,0.8744939 }, 
{0.28890523,0.92712545},
{0.2460567 ,0.85829955}, 
{4.8590580e-05, 9.5141697e-01},
{0.01828253,0.94331986},
{0.00403038,0.8744939 }, 
{0.02782911,0.96558696},
{0.15086344,0.8724696 }, 
{0.43055397,0.8805668 }, 
{0.8423702,0.9453441}, 
{4.8524773e-05, 9.4534409e-01},
{0.03148659,0.9352227 },
{0.5243714 ,0.91295546}, 
{0.03148659,0.9392713 },
{0.00404031,0.8643725 }, 
{0.4187465,0.9291498},
{0.02590371,0.8643725 }, 
{0.32915926,0.9392713 },
{0.7804266 ,0.93319833},
{0.5698932,0.8562753}, 
{0.54607666,0.8704453 }, 
{0.12786484,0.9392713 },
{0.00547577,0.9412955 },
{0.00609481,0.88461536}, 
{0.7280928 ,0.93117404},
{0.68124235,0.8906882 }, 
{0.12879008,0.8967612 }, 
{0.52670455,0.9291498 },
{0.27403882,0.9352227 },
{0.5255632 ,0.91700405}, 
{0.26461017,0.979757  }, 
{0.0316922,0.8562753}, 
{0.4541075,0.9149797}, 
{0.47851118,0.86234814}, 
{0.07572918,0.9352227 },
{0.0095834,0.9473683},
{0.20155041,0.85425097}, 
{0.5176994,0.9392713},
{0.8263467,0.9392713},
{0.1764304,0.9251012},
{0.6813069,0.8866396}, 
{0.67744976,0.9372469 },
{0.01584358,0.9372469 },
{0.6520558 ,0.92712545},
{0.02526185,0.85829955}, 
{0.03221818,0.85425097}, 
{0.03846764,0.93319833},
{0.08836398,0.93319833},
{0.09675279,0.9251012 },
{0.       ,0.9412955},
{0.53054434,0.85829955}, 
{0.5549228 ,0.91700405},
{0.3780737,0.9251012},
{0.03148659,0.95951414},
{0.01763296,0.9493927 },
{0.32747155,0.94331986},
{0.47706908,0.91700405}, 
{0.36319783,0.9453441 },
{0.41376844,0.93117404},
{0.18597241,0.9453441 },
{0.28605726,0.8724696 }, 
{0.5357648 ,0.85425097}, 
{0.16381843,0.979757  },
{0.10975187,0.93117404},
{0.35959578,0.8805668 }, 
{0.48530126,0.85829955}, 
{0.09412806,0.99392706},
{0.52863944,0.85829955}, 
{0.3001853,0.9615384},
{0.52424705,0.9190283 }, 
{0.50637525,0.8663967 }, 
{0.4865922,0.9190283}, 
{0.37270364,0.9352227 },
{0.11136398,0.9291498 },
{0.34642178,0.8603239 }, 
{0.03666865,0.9392713 },
{0.85601026,0.85425097}, 
{0.16441669,0.9412955 },
{0.15822329,0.9291498 },
{0.4664487 ,0.91093117}, 
{0.7052997,0.9372469},
{0.11054581,0.88866395}, 
{0.04992514,0.8825911 }, 
{0.5092169 ,0.91700405}, 
{0.04466247,0.93117404},
{0.02016118,0.9372469 },
{0.49007466,0.86842096}, 
{0.15207724,0.85829955}, 
{0.30255467,0.93117404},
{0.50191045,0.8825911 }, 
{0.01230897,0.9493927 },
{0.5590145 ,0.85425097}, 
{0.43907425,0.8744939 }, 
{0.20373242,0.93319833},
{0.17714988,0.9372469 },
{0.929629 ,0.9635627},
{9.1294746e-04, 9.4331986e-01},
{0.3082931,0.8603239}, 
{0.08312728,0.9352227 },
{0.11338416,0.92712545},
{0.61523855,0.9392713 },
{0.40551582,0.92105263},
{0.15113565,0.95141697},
{0.17653587,0.979757  },
{0.38540375,0.9190283 }, 
{0.1912905,0.9676113},
{0.35112587,0.92712545}, 
{0.5307616 ,0.93117404},
{0.5449526 ,0.99797565},
{1.7154682e-04, 9.3927127e-01},
{0.36322147,0.8765182 }, 
{0.00806283,0.93319833},
{0.41732645,0.8562753 }, 
{0.18189017,0.9412955 },
{0.25627723,0.94331986},
{0.32949933,0.85425097}, 
{0.5051032 ,0.93117404},
{0.46535608,0.8603239 }, 
{0.01537589,0.94331986},
{0.6643797,0.9190283}, 
{0.23895489,0.9291498 },
{0.48582867,0.92105263}, 
{0.60870826,0.9493927 }, 
{0.3824818 ,0.85829955}, 
{0.33147982,0.9919028 }, 
{0.2804983,0.8562753}, 
{0.8712403 ,0.86842096}, 
{0.00419708,0.9372469 },
{0.20956217,0.86234814}, 
{0.03148659,0.85425097}, 
{0.01128643,0.9392713 },
{0.44528025,0.9291498 },
{0.03577475,0.8562753 }, 
{0.35713196,0.9453441 }, 
{0.47880557,0.86842096}, 
{0.47268775,0.8765182 }, 
{0.08009906,0.92712545},
{0.30121177,0.8724696 }, 
{0.44509605,0.9392713 },
{0.09517893,0.9412955 },
{0.65045476,0.85425097}, 
{0.24799155,0.85425097}, 
{0.4402959 ,0.92105263},
{0.82663167,0.8744939 }, 
{0.37775725,0.97570854},
{0.42217222,0.9392713 }, 
{0.00604738,0.8643725 }, 
{0.00100944,0.9412955 },
{0.07613773,0.94331986},
{0.90576696,0.8603239 }, 
{0.7714215,0.9959514},
{0.87965035,0.95141697}, 
{0.24751768,0.9291498 },
{0.8112001,0.8704453}, 
{0.44257867,0.89271253}, 
{0.11336228,0.9352227 },
{0.00229871,0.9493927 },
{0.01017952,0.9676113 },
{0.11927105,0.8825911 }, 
{0.15224445,0.9392713 },
{0.7442627,0.8866396}, 
{0.4055552 ,0.92712545},
{0.0201596,0.9473683},
{0.3491548,0.9291498},
{0.32328072,0.8643725 }, 
{0.37864202,0.89271253}, 
{0.39961052,0.8724696 }, 
{0.17138782,0.8724696 }, 
{0.316541  ,0.97570854},
{0.10146523,0.85425097}, 
{0.3432731 ,0.88461536}, 
{0.92450464,0.98987854},
{0.05259615,0.9777328 },
{0.40075663,0.85829955}, 
{0.29426897,0.93117404},
{0.11355891,0.93117404},
{0.22131611,0.85829955}, 
{0.4231908,0.8603239}, 
{0.24252862,0.93117404},
{0.5833127 ,0.85425097}, 
{0.03148659,0.9392713 },
{0.21680251,0.99392706},
{0.570674 ,0.9878542}, 
{0.5951249 ,0.97570854},
{0.6476792 ,0.95141697},
{0.54071295,0.99797565},
{0.01766067,0.9473683 },
{0.6499085,0.8947368}, 
{0.4636983 ,0.89271253}, 
{0.07327087,0.9291498 },
{0.06977429,0.8744939 }, 
{0.21136004,0.9190283 }, 
{0.4633079,0.9838056},
{0.4621791,0.9959514}, 
{0.30224925,0.95546556},
{0.03397451,0.8825911 }, 
{0.58560336,0.88461536}, 
{0.34655875,0.95546556},
{0.5331247,0.9736842},
{0.47488865,0.94331986}, 
{0.31529728,0.86234814}, 
{0.45602345,0.9777328 }, 
{0.02589457,0.93319833},
{0.16557224,0.8562753 }, 
{0.66521406,0.88866395}, 
{0.52679116,0.9959514 },
{0.48254463,0.92307687},
{0.6498644,0.9412955},
{0.47115433,0.95141697}, 
{0.5393669,0.8744939}, 
{0.657736 ,0.9453441},
{0.0314877 ,0.92712545},
{0.57808435,0.9716599 }, 
{0.06056997,0.85425097}, 
{0.3382337,0.8724696}, 
{0.01271556,0.9372469 },
{0.1313405 ,0.93117404},
{0.10133802,0.9372469 },
{0.6605745,0.8562753}, 
{0.1977358 ,0.93117404},
{0.0075641,0.8643725}, 
{0.5469473 ,0.98987854},
{0.63290256,0.89271253}, 
{0.8585717,0.8724696}, 
{0.46109754,0.8663967 }, 
{0.49245816,0.9919028 },
{0.70844835,0.9574899 },
{0.2640135,0.9089068}, 
{0.7292594,0.8704453}, 
{0.68886524,0.8663967 }, 
{1.250098e-04, 8.825911e-01}, 
{0.15157583,0.8643725 }, 
{0.01159436,0.9412955 },
{0.11367951,0.8643725 }, 
{0.6748742,0.8562753}, 
{0.5317487 ,0.86842096}, 
{0.04031008,0.93117404},
{0.6408907,0.8744939}, 
{0.09228925,0.9372469 },
{0.4313411 ,0.93319833},
{0.24396126,0.85425097}, 
{0.42369303,0.9372469 }, 
{0.7201425,0.9412955}, 
{0.23968539,0.9635627 },
{0.1866903 ,0.87854254}, 
{0.97608435,0.9412955 },
{0.02774614,0.94331986},
{0.486016 ,0.9676113},
{0.3218292,0.9149797},
{0.45504266,0.8663967 }, 
{0.24515775,0.9696356 },
{1.129073e-05, 9.372469e-01},
{0.57344484,0.92712545},
{0.05000905,0.85829955}, 
{0.0040306 ,0.94331986},
{0.88139474,0.9392713 },
{0.30025616,0.86842096}, 
{0.38552973,0.8947368 }, 
{0.43692842,0.8603239 }, 
{0.81757295,0.8704453 }, 
{0.858049 ,0.9089068}, 
{0.22518109,0.8562753 }, 
{0.56985384,0.9392713 }, 
{0.01766902,0.9372469 },
{0.9603867,0.8947368}, 
{0.54878294,0.97570854},
{0.3924237 ,0.85829955}, 
{0.4554992,0.8663967}, 
{0.7595636 ,0.85425097}, 
{0.42343798,0.9574899 }, 
{0.00120911,0.95141697},
{0.52871025,0.8562753 }, 
{0.56565034,0.97570854}, 
{0.16045253,0.8643725 }, 
{0.5076032 ,0.92307687}, 
{0.5166777,0.8643725}, 
{0.42823339,0.9291498 },
{0.00758536,0.8906882 }, 
{0.48058775,0.87854254}, 
{0.67310774,0.9251012 },
{0.02521352,0.9392713 },
{0.78148305,0.88866395}, 
{0.57211137,0.9453441 }, 
{0.08817159,0.94331986},
{0.02771544,0.9352227 },
{0.7603162 ,0.93319833},
{0.25484145,0.88866395}, 
{0.7760689,0.9716599}, 
{0.5107078 ,0.92712545}, 
{0.35073388,0.9291498 },
{0.14029497,0.8663967 }, 
{0.4076081,0.8805668}, 
{0.639617  ,0.93117404}, 
{0.42127013,0.8562753 }, 
{0.37875378,0.9251012 },
{0.03148659,0.9392713 },
{0.5248673,0.979757 }, 
{0.57072437,0.8805668 }, 
{0.00131501,0.9372469 },
{0.4248486,0.9676113},
{0.0630031,0.9392713},
{0.74709815,0.9149797 }, 
{0.52234524,0.9716599 },
{0.41381255,0.9291498 },
{0.01632265,0.9291498 },
{0.19869928,0.9493927 },
{0.6355112,0.8643725}, 
{0.44695216,0.8765182 }, 
{0.32440478,0.8562753 }, 
{0.9152822,0.9412955},
{0.43252343,0.87854254}, 
{0.56238204,0.98987854},
{0.5204529,0.9291498},
{0.47452497, 1.        },
{0.14609778,0.92712545},
{0.03362264,0.9493927 },
{0.89056677,0.86234814}, 
{0.41301906,0.9838056 },
{0.38447803,0.92307687},
{0.5271013,0.8704453}, 
{0.59139377,0.8562753 }, 
{0.46047094,0.8562753 }, 
{0.09221289,0.93117404},
{0.8849559 ,0.88866395}, 
{0.04652002,0.9352227 },
{0.40363607,0.9291498 },
{0.49086496,0.8663967 }, 
{0.00828626,0.8663967 }, 
{0.16916329,0.86234814}, 
{0.23698856,0.9635627 },
{0.15724309,0.8704453 }, 
{0.11441661,0.9372469 },
{8.0766884e-04, 9.5546556e-01},
{0.03148722,0.9493927 },
{0.7471784 ,0.93319833},
{0.23434684,0.8663967 }, 
{0.16635153,0.9412955 }, 
{0.03148659,0.85425097}, 
{0.43175676,0.9372469 },
{0.03148659,0.8724696 }, 
{0.00624877,0.9291498 },
{0.64713293,0.9453441 }, 
{0.00490772,0.9615384 },
{0.08715677,0.9392713 },
{0.00403065,0.9372469 },
{0.42893556,0.9574899 }, 
{0.75158024,0.8825911 }, 
{0.7291366,0.8724696}, 
{0.4625349,0.8562753}, 
{0.03148659,0.93117404},
{0.0061464,0.9392713},
{0.43578386,0.9352227 },
{0.72346115,0.88866395}, 
{0.6966865,0.8967612}, 
{0.4408123,0.9635627},
{0.8422191 ,0.99797565},
{0.00405856,0.9372469 },
{0.34059677,0.8562753 }, 
{0.60294306,0.9392713 },
{0.47701558,0.9089068 }, 
{0.30000424,0.93319833},
{0.1898185,0.9251012},
{0.34563777,0.9493927 },
{0.02204061,0.9473683 },
{0.8397254,0.8724696}, 
{0.02885211,0.8967612 }, 
{0.77972454,0.9777328 },
{0.5551448,0.9919028},
{0.03049114,0.92712545},
{0.6024141,0.902834 }, 
{0.13631065,0.9412955 },
{0.9780601,0.8562753}, 
{2.0237219e-04, 9.4736832e-01},
{0.44271564,0.8825911 }, 
{0.83409554,0.92307687},
{0.41859692,0.9777328 },
{0.16041316,0.8562753 }, 
{0.00312271,0.9473683 },
{0.31392133,0.85425097}, 
{0.5691705,0.8987854}, 
{0.11275286,0.95546556},
{0.1289195,0.9291498},
{0.68649745,0.8866396 }, 
{0.28061953,0.85829955}, 
{0.8393979,0.9615384},
{0.2196851 ,0.92712545},
{0.5704221 ,0.93319833}, 
{0.42027044,0.85829955}, 
{0.26596096,0.98178136},
{0.45586604,0.99392706}, 
{0.1379448,0.9291498},
{0.14853549,0.98582995},
{0.9329666,0.8906882}, 
{0.38926873,0.9574899 },
{0.08840632,0.9352227 },
{0.11535317,0.9251012 },
{0.3006434,0.9534413}, 
{0.8885516,0.9352227}, 
{0.7213342,0.8866396}, 
{0.4425362 ,0.91295546}, 
{0.22906339,0.85829955}, 
{0.08193378,0.9736842 }, 
{0.6239604,0.9251012},
{0.45935318,0.93117404},
{0.00655601,0.9574899 },
{0.5178127 ,0.85829955}, 
{0.425069 ,0.9352227},
{0.1786203,0.9453441},
{0.00604837,0.9473683 },
{0.25719666,0.9919028 },
{0.0227308,0.9352227},
{0.03148942,0.85425097}, 
{0.52370393,0.85425097}, 
{0.46584883,0.85425097}, 
{0.5945975,0.9878542},
{4.5655557e-05, 9.5344132e-01},
{0.25425893,0.9190283 },
{0.24191149,0.9190283 }, 
{0.25228   ,0.85425097}, 
{8.073525e-04, 8.906882e-01}, 
{0.14877304,0.8704453 }, 
{0.43834686,0.85829955}, 
{0.03180917,0.8562753 }, 
{0.11678644,0.8562753 }, 
{0.6252954,0.9716599},
{0.5149396, 1.       },
{0.44337374,0.9493927 },
{0.53748876,0.9190283 }, 
{0.27788964,0.9392713 },
{0.03148659,0.9493927 },
{4.4347606e-05, 9.3927127e-01},
{0.5740903 ,0.85829955}, 
{0.93384826,0.93117404},
{0.46457997,0.9878542 },
{0.03148659,0.8825911 }, 
{0.366389  ,0.88461536}, 
{0.       ,0.9412955},
{0.03148659,0.85829955}, 
{0.34455463,0.9534413 },
{0.08940429,0.9412955 },
{0.5047663 ,0.89271253}, 
{0.03148659,0.8562753 }, 
{0.12598667,0.9291498 },
{0.29197517,0.8643725 }, 
{0.41268688,0.8603239 }, 
{0.03148659,0.8562753 }, 
{0.16334772,0.9372469 },
{0.7648188 ,0.99797565},
{0.8471641 ,0.88461536}, 
{0.41297185,0.8805668 }, 
{0.48777455,0.86842096}, 
{0.23806383,0.92712545},
{0.23170511,0.88461536}, 
{0.02004688,0.9372469 },
{0.02270262,0.9372469 },
{0.03345136,0.85829955}, 
{0.5819903 ,0.93319833},
{0.36258543,0.9696356 }, 
{0.8026294,0.9412955}, 
{0.5767966,0.8704453}, 
{0.4476496,0.8744939}, 
{0.6912393,0.9635627}, 
{0.3993775,0.8562753}, 
{0.54188424,0.93319833}, 
{0.12897444,0.93319833},
{0.78373903,0.9412955 },
{0.03954716,0.9352227 },
{0.23667684,0.9676113 },
{0.4128144,0.9372469},
{0.8724399 ,0.86234814}, 
{0.41824743,0.92712545}, 
{0.4986878,0.8825911}, 
{0.4387688 ,0.99797565},
{0.03148659,0.94331986},
{0.4746037 ,0.92105263}, 
{2.0923156e-04, 9.5546556e-01},
{0.22415936,0.9777328 },
{0.38604766,0.86234814}, 
{0.49749288,0.92712545},
{0.08336674,0.9372469 },
{0.6029257 ,0.85425097}, 
{0.48051846,0.9412955 }, 
{0.762218  ,0.85829955}, 
{0.4535077,0.9392713},
{0.35274586,0.92712545},
{0.19248384,0.8866396 }, 
{0.01773435,0.9919028 },
{0.47116065,0.92712545},
{0.45583457,0.8825911 }, 
{0.15366182,0.9372469 },
{0.01453889,0.87854254}, 
{0.01262855,0.95141697},
{0.06156983,0.9372469 },
{0.00482439,0.86234814}, 
{0.43692055,0.93117404},
{0.7166537,0.9453441},
{0.16390188,0.93117404},
{0.55555105,0.9372469 }, 
{0.71252424,0.8603239 }, 
{0.25616232,0.96558696},
{0.02378277,0.88461536}, 
{0.39682236,0.979757  },
{0.7302717 ,0.85425097}, 
{8.070328e-04, 9.473683e-01},
{0.9716038 ,0.85425097}, 
{0.3209932,0.8947368}, 
{0.33887443,0.93319833},
{0.5804837 ,0.86842096}, 
{0.08888602,0.9392713 },
{0.38137662,0.86234814}, 
{0.5092641 ,0.95141697},
{0.00354667,0.9412955 },
{0.6023716,0.9392713},
{0.0335137 ,0.93117404},
{0.00476139,0.86234814}, 
{0.00504752,0.94331986},
{0.7786162,0.9251012},
{0.485306 ,0.9453441},
{0.50474894,0.9372469 },
{0.7395319,0.8704453}, 
{0.5463097,0.8906882}, 
{0.03149604,0.85829955}, 
{0.03148659,0.8562753 }, 
{0.17720653,0.9473683 },
{0.16710407,0.9352227 },
{0.6889298 ,0.85829955}, 
{0.37505886,0.91700405}, 
{0.45224822,0.9068826 }, 
{0.73828816,0.9615384 }, 
{0.23993886,0.9392713 },
{0.01260906,0.95141697},
{0.15522702,0.94331986},
{0.51661783,0.92105263}, 
{0.37798393,0.8663967 }, 
{0.41087955,0.85829955}, 
{0.442426 ,0.9959514},
{0.2191829,0.9291498},
{0.40513325,0.8704453 }, 
{0.2684972,0.9676113},
{0.31968495,0.9372469 },
{0.41429427,0.98582995}, 
{0.53593487,0.9696356 }, 
{0.7911526 ,0.92307687}, 
{0.44221815,0.9372469 },
{0.01274245,0.9392713 },
{0.39810702,0.9372469 },
{0.8230311,0.9291498},
{0.62166816,0.9251012 }, 
{0.50773704,0.9190283 }, 
{0.5923384,0.9291498},
{0.03148659,0.8744939 }, 
{0.56057316,0.85425097}, 
{0.90887153,0.94331986}, 
{0.37799025,0.85425097}, 
{0.32902858,0.9372469 }, 
{0.17334472,0.95546556},
{2.6300122e-04, 9.4129550e-01},
{0.06300545,0.8744939 }, 
{0.36235875,0.8663967 }, 
{0.05920503,0.9372469 },
{0.03148738,0.93117404},
{0.8137836,0.9412955}, 
{0.05598269,0.9352227 },
{0.47850016,0.8724696 }, 
{0.43123722,0.8906882 }, 
{0.05999219,0.9291498 },
{0.0125966,0.9453441},
{0.6384646,0.8947368}, 
{0.43863815,0.9372469 }, 
{0.27075636,0.9676113 },
{0.14974725,0.9372469 },
{0.1012612,0.9291498},
{0.17864706,0.97570854},
{0.5176695 ,0.98987854},
{0.02029279,0.93319833},
{0.4310861 ,0.92307687},
{0.24536085,0.91295546},
{0.7923617,0.8603239}, 
{0.49637195,0.9352227 },
{0.5466403,0.9716599},
{0.4962224 ,0.91295546}, 
{0.30629054,0.9352227 }, 
{0.46665177,0.9392713 }, 
{0.03148643,0.9291498 },
{0.70280594,0.9372469 },
{0.02520817,0.9352227 },
{0.07560419,0.93319833},
{0.49054378,0.93319833},
{0.29134545,0.9676113 },
{0.00110963,0.86842096}, 
{0.36224854,0.95951414}, 
{0.380029 ,0.9291498},
{0.39743793,0.8866396 }, 
{0.03174337,0.8663967 }, 
{0.07687955,0.9392713 },
{0.3875653,0.9190283}, 
{0.13200517,0.9574899 },
{0.59495336,0.88461536}, 
{0.03148659,0.9392713 },
{0.09545003,0.9372469 },
{0.5166934,0.8704453}, 
{0.03124194,0.93319833},
{0.14169282,0.9473683 },
{0.0101281,0.9372469},
{0.03815671,0.86234814}, 
{0.49310523,0.9716599 }, 
{0.00404239,0.9392713 },
{0.5019844,0.9453441},
{0.36993754,0.9412955 },
{0.05038736,0.9352227 },
{0.12803109,0.9352227 }, 
{0.25786415,0.99392706},
{0.03148659,0.85829955}, 
{0.36648503,0.92712545},
{0.3778139,0.8603239}, 
{0.12611672,0.93319833},
{0.52814037,0.98178136}, 
{0.6228284,0.8603239}, 
{0.26701576,0.93117404},
{0.47356465,0.9534413 }, 
{0.21954341,0.90485823}, 
{0.27155453,0.93319833},
{0.5350406,0.9473683}, 
{0.       ,0.9372469},
{0.3596918,0.9149797},
{0.5469268,0.8603239}, 
{0.19184309,0.9534413 },
{0.42664805,0.8603239 }, 
{0.3429063,0.8562753}, 
{0.76226676,0.93117404},
{0.20206206,0.93117404},
{0.10101906,0.8643725 }, 
{0.07768199,0.98178136},
{0.6035051 ,0.92105263}, 
{0.30562618,0.93117404},
{0.66630036,0.8562753 }, 
{0.10180072,0.9291498 },
{0.00766195,0.98582995},
{0.00756889,0.9412955 },
{0.6678731,0.8603239}, 
{0.08105405,0.8744939 }, 
{0.3080853,0.9412955},
{0.39102727,0.9959514 }, 
{0.585087 ,0.8704453}, 
{0.64905834,0.9412955 },
{0.4413129,0.9251012}, 
{0.40067002,0.91093117}, 
{0.20292637,0.92712545},
{0.32110658,0.93319833},
{0.04788575,0.85425097}, 
{0.60233223,0.86842096}, 
{0.22040614,0.99392706},
{0.31120244,0.9473683 },
{0.4169801,0.8704453}, 
{0.7820561,0.8724696}, 
{0.9874479 ,0.92712545}, 
{0.47775236,0.85425097}, 
{0.12626989,0.93319833},
{0.92301375,0.92105263}, 
{0.5758331 ,0.89271253}, 
{0.4921748,0.9352227},
{0.       ,0.9149797}, 
{0.76422834,0.9251012 },
{0.50595176,0.8562753 }, 
{0.0055742 ,0.86842096}, 
{0.51077706,0.9251012 },
{0.03148659,0.92712545},
{0.30402824,0.9534413 },
{0.43070352,0.8663967 }, 
{0.8566179 ,0.92712545},
{0.44988042,0.8643725 }, 
{0.85615665,0.8562753 }, 
{0.0432259,0.8603239}, 
{0.25449827,0.8724696 }, 
{0.18020406,0.85425097}, 
{0.8143787,0.8663967}, 
{0.5014696,0.9676113},
{0.00314362,0.9352227 },
{0.19782397,0.99797565},
{0.03159333,0.93319833},
{0.33574155,0.91700405}, 
{0.4066777 ,0.94331986},
{0.18193741,0.9412955 },
{6.0489675e-04, 9.4129550e-01},
{0.46615902,0.85829955}, 
{0.17028107,0.8643725 }, 
{0.4732671 ,0.94331986},
{2.3184207e-04, 9.6558696e-01},
{0.6796491 ,0.85829955}, 
{0.02126054,0.9372469 },
{0.38104916,0.88866395}, 
{0.1671387 ,0.86234814}, 
{0.6125575,0.8987854}, 
{0.46619523,0.9878542 },
{0.00657346,0.9676113 },
{0.23560314,0.85425097}, 
{0.622789 ,0.9372469},
{0.16170096,0.85829955}, 
{0.00097102,0.9453441 },
{0.43116164,0.85425097}, 
{0.43954495,0.94331986},
{0.5044939,0.9716599},
{0.45832515,0.8603239 }, 
{0.28941846,0.86842096}, 
{0.39571562,0.85829955}, 
{0.07678194,0.86842096}, 
{0.56748915,0.9473683 }, 
{0.08379999,0.85829955}, 
{0.15345305,0.9372469 },
{0.02282369,0.9352227 },
{0.4420324 ,0.93117404},
{0.6467629,0.9453441},
{0.6643435,0.9392713}, 
{0.40429726,0.9453441 }, 
{0.01781795,0.9352227 },
{0.37992036,0.8643725 }, 
{0.40612668,0.93319833},
{0.03165568,0.8704453 }, 
{0.25177938,0.9716599 },
{0.00196832,0.96558696},
{0.6139256,0.8603239}, 
{0.48106632,0.93319833},
{0.42334825,0.9291498 }, 
{0.05098419,0.93319833},
{0.03022776,0.9412955 },
{0.55881304,0.93117404}, 
{0.39393348,0.9392713 },
{0.37006193,0.9149797 }, 
{0.3429976,0.9574899},
{0.39924213,0.92712545},
{0.22721827,0.93117404},
{0.36870486,0.8663967 }, 
{0.5726482 ,0.92712545},
{0.02811942,0.9412955 },
{0.49919945,0.9574899 }, 
{0.6555399 ,0.87854254}, 
{0.55621225,0.9291498 },
{0.03632498,0.9392713 },
{0.7804266,0.9291498},
{0.2861722,0.8724696}, 
{0.41225553,0.8643725 }, 
{0.16748033,0.9149797 }, 
{0.93991566,0.85425097}, 
{0.3674202 ,0.87854254}, 
{0.16248341,0.8866396 }, 
{0.00109515,0.9453441 },
{0.59552795,0.8643725 }, 
{0.76435596,0.9878542 }, 
{0.4299195,0.9473683}, 
{0.5872627,0.9392713},
{0.00202725,0.95546556},
{0.00525982,0.9352227 },
{0.19145894,0.9372469 },
{0.71861064,0.9392713 },
{0.38116565,0.8744939 }, 
{0.17652643,0.86842096}, 
{0.1827592 ,0.93117404},
{0.03148659,0.9412955 },
{0.5020238,0.8562753}, 
{0.53957784,0.9392713 },
{0.902804  ,0.86234814}, 
{0.0177534 ,0.86842096}, 
{0.30252   ,0.92307687},
{0.53235644,0.9291498 },
{0.26421815,0.9534413 },
{0.03149352,0.85425097}, 
{0.5537169 ,0.93117404},
{0.42882535,0.85829955}, 
{0.02662223,0.9635627 },
{0.9645823 ,0.98987854},
{0.9986854 ,0.98178136}, 
{0.10647144,0.93319833},
{0.28724903,0.93117404},
{0.56878793,0.99797565}, 
{0.09120705,0.9251012 },
{0.08580852,0.95951414},
{0.8342703,0.9291498},
{0.212884 ,0.9412955},
{0.28387052,0.9453441 },
{0.11955176,0.9392713 },
{0.70179206,0.8866396 }, 
{0.03154059,0.86842096}, 
{0.40454918,0.9372469 },
{0.21616805,0.93319833},
{0.58392197,0.9149797 }, 
{0.70844835,0.9392713 },
{0.4368749 ,0.89271253}, 
{0.37945753,0.9392713 },
{0.10711692,0.9838056 },
{0.45320067,0.902834  }, 
{0.3322056,0.8603239}, 
{0.46103927,0.8562753 }, 
{0.07024879,0.9473683 },
{0.03158892,0.93117404},
{0.16451429,0.9352227 },
{0.53725106,0.9352227 }, 
{0.7365123,0.9574899}, 
{0.49986696,0.89271253}, 
{4.436933e-04, 9.574899e-01},
{0.4408123,0.9716599},
{0.16483861,0.9352227 },
{0.00151249,0.9352227 },
{0.10858639,0.85829955}, 
{0.9998143,0.9493927},
{0.5126285,0.8704453}, 
{0.61129016,0.85425097}, 
{0.03148659,0.9493927 },
{0.20215966,0.85425097}, 
{0.4557637 ,0.88461536}, 
{0.02317413,0.9291498 },
{0.10087911,0.9291498 },
{0.2625226,0.9615384},
{0.49386877,0.88461536}, 
{0.62985146,0.92307687}, 
{0.1185308,0.9392713},
{0.26847672,0.9412955 },
{0.34851247,0.9372469 }, 
{0.153312  ,0.93117404},
{0.839601 ,0.9493927}, 
{0.10464302,0.88461536}, 
{0.454394 ,0.8724696}, 
{0.5691674,0.9919028},
{0.32630658,0.9251012 },
{0.40283003,0.9534413 },
{0.3572154 ,0.92307687}, 
{0.       ,0.9493927},
{0.40775922,0.92307687}, 
{0.6870768 ,0.88866395}, 
{0.03149494,0.9392713 },
{0.00355184,0.9392713 },
{0.3881179 ,0.95141697},
{0.00302482,0.95141697},
{1.8226486e-04, 8.7651819e-01}, 
{0.342593  ,0.86234814}, 
{0.27892083,0.8704453 }, 
{0.93200314,0.96558696},
{0.00423874,0.9493927 },
{0.22767639,0.9838056 },
{0.56108165,0.9534413 }, 
{0.03111631,0.93117404},
{0.45261505,0.9392713 },
{0.5042326 ,0.89271253}, 
{0.8373025,0.9251012}, 
{0.2759894,0.9574899},
{0.03148659,0.85425097}, 
{0.7163719,0.979757 },
{0.4893032 ,0.85425097}, 
{0.47491857,0.95546556}, 
{0.47893468,0.98178136},
{0.00114526,0.8643725 }, 
{0.44285104,0.85829955}, 
{0.37580192,0.9615384 }, 
{0.48797762,0.91093117}, 
{0.00151331,0.88461536}, 
{0.17718135,0.93319833},
{0.47141725,0.8987854 }, 
{0.50438213,0.9251012 },
{0.08186514,0.93319833},
{0.02841995,0.85829955}, 
{0.15717776,0.9372469 },
{0.03132129,0.8805668 }, 
{0.47098276,0.88461536}, 
{0.47980055,0.9392713 }, 
{0.8341286 ,0.86234814}, 
{0.32495108,0.8724696 }, 
{0.43664032,0.93117404}, 
{0.59885925,0.9919028 }, 
{0.00453607,0.9392713 },
{0.16045567,0.92307687},
{0.15766123,0.9453441 },
{2.0175979e-04, 9.4129550e-01},
{0.01322352,0.95141697},
{0.41460285,0.8805668 }, 
{0.06433623,0.92105263}, 
{0.59694487,0.85425097}, 
{0.7219561 ,0.88866395}, 
{9.1568520e-04, 9.5141697e-01},
{0.42638826,0.9251012 },
{0.03148502,0.85829955}, 
{0.1135131 ,0.93319833},
{1.4934689e-04, 9.4534409e-01},
{0.57986176,0.92307687}, 
{0.01715689,0.9352227 },
{0.09183049,0.9291498 },
{0.7096259,0.9392713},
{0.09170061,0.9372469 },
{0.25269565,0.85425097}, 
{0.5485783 ,0.92712545},
{0.4171501,0.9453441},
{0.00453443,0.9412955 },
{0.5422889,0.8603239}, 
{0.18214679,0.8987854 }, 
{0.4134835,0.9068826}, 
{0.48005086,0.85425097}, 
{0.311256 ,0.9251012},
{0.15120916,0.9392713 },
{0.24119674,0.9291498 },
{0.539877  ,0.93319833}, 
{0.515763 ,0.9251012}, 
{0.2878032 ,0.85425097}, 
{0.4462941,0.9372469}, 
{0.73019457,0.92307687}, 
{0.18917617,0.96558696},
{0.20349784,0.8603239 }, 
{0.30849147,0.93319833},
{0.09445978,0.92307687},
{0.46257898,0.8987854 }, 
{0.69270504,0.88866395}, 
{0.57455474,0.8906882 }, 
{0.08161356,0.9251012 },
{0.41208234,0.96558696},
{0.93696547,0.9615384 }, 
{0.15466781,0.9291498 },
{0.01350619,0.9473683 },
{0.56715226,0.86842096}, 
{0.00671146,0.9392713 },
{0.4530165,0.8825911}, 
{0.38955212,0.91295546}, 
{0.15135731,0.9352227 },
{0.12692797,0.93117404},
{0.6141208,0.9716599},
{0.5303429,0.9089068}, 
{0.14273518,0.98987854},
{0.01512082,0.9372469 },
{9.0847164e-04, 9.4331986e-01},
{0.39834633,0.99797565},
{0.19415262,0.92105263},
{0.50595963,0.9372469 },
{0.03149462,0.8825911 }, 
{0.14207333,0.9372469 },
{0.25209266,0.9251012 },
{0.6073165,0.9068826}, 
{0.35650378,0.93319833},
{0.38758895,0.91700405}, 
{0.38043362,0.8866396 }, 
{0.47542235,0.8663967 }, 
{0.59619546,0.9838056 }, 
{0.13602364,0.9372469 },
{0.28993955,0.93319833},
{0.00412673,0.95951414},
{0.14650114,0.9372469 },
{0.2772662 ,0.93117404},
{0.07859777,0.8987854 }, 
{0.40809143,0.96558696},
{0.2910164,0.9716599},
{0.44365552,0.8603239 }, 
{0.5561571,0.9574899},
{0.3791096,0.9352227},
{0.57639045,0.9190283 }, 
{0.67363673,0.93319833},
{0.42248234,0.9412955 },
{0.9960201,0.9089068}, 
{0.2668961,0.8562753}, 
{0.0345093,0.9372469},
{0.73291975,0.9696356 }, 
{0.01788092,0.9453441 },
{0.12797205,0.9352227 },
{0.34629896,0.8866396 }, 
{0.62516785,0.9412955 },
{0.11860165,0.9534413 },
{0.20874509,0.9291498 },
{7.125557e-04, 9.392713e-01},
{0.24070397,0.8562753 }, 
{0.03148659,0.8825911 }, 
{0.48516744,0.95546556},
{0.03148675,0.8562753 }, 
{0.83220947,0.9089068 }, 
{0.39423102,0.9493927 },
{0.5315708 ,0.86234814}, 
{0.2681209,0.9412955},
{0.06707273,0.9352227 },
{0.26326254,0.93319833},
{0.23973262,0.92712545},
{0.9058394,0.8805668}, 
{0.82872397,0.93319833},
{0.547385 ,0.8603239}, 
{0.46918488,0.99392706},
{0.6000337 ,0.91700405}, 
{0.66415614,0.90485823}, 
{0.14512768,0.9251012 },
{0.1562097,0.9291498},
{0.6963197 ,0.93319833}, 
{0.47802946,0.8866396 }, 
{0.51070464,0.8663967 }, 
{0.25344974,0.93319833},
{0.5566845,0.9493927}, 
{0.759211 ,0.9919028}, 
{0.9971315 ,0.93319833},
{0.4842134,0.9838056},
{0.07576524,0.91093117},
{0.06702535,0.8947368 }, 
{0.10052787,0.8805668 }, 
{0.26440394,0.95141697},
{0.5013374,0.9352227}, 
{0.29912263,0.92712545},
{0.35764834,0.9473683 },
{0.23142174,0.9615384 },
{0.9427196,0.9291498},
{0.4441121,0.9412955}, 
{0.00187002,0.9493927 },
{0.3496602 ,0.85829955}, 
{0.09622791,0.9412955 },
{0.09026277,0.9959514 },
{0.5217722 ,0.91295546}, 
{0.04181781,0.92307687},
{0.48152763,0.8562753 }, 
{2.6948116e-04, 9.3927127e-01},
{0.07161862,0.93117404},
{0.33012903,0.86842096}, 
{0.16879332,0.85425097}, 
{0.03148659,0.85425097}, 
{0.5251964,0.8866396}, 
{0.24826705,0.93117404},
{0.45864943,0.9372469 },
{0.40386277,0.8906882 }, 
{0.45970738,0.92307687}, 
{0.7027146 ,0.96558696},
{0.49720004,0.8663967 }, 
{0.23300079,0.93117404},
{0.00554983,0.9412955 },
{0.03209113,0.8663967 }, 
{0.34793943,0.87854254}, 
{0.26334286,0.9412955 },
{0.54300517,0.85425097}, 
{0.4693171,0.9919028},
{0.11788186,0.91700405}, 
{0.9881233,0.9534413}, 
{0.2637301 ,0.95141697},
{0.6507224 ,0.93117404}, 
{0.16669947,0.9493927 },
{0.4006228 ,0.93319833},
{0.30783024,0.8663967 }, 
{0.10576378,0.86234814}, 
{0.55031794,0.91295546}, 
{0.38392705,0.9089068 }, 
{0.30903617,0.9352227 },
{0.13873056,0.9392713 },
{0.9611408,0.9453441}, 
{0.5259347 ,0.93117404}, 
{0.4371992,0.9149797}, 
{0.17743482,0.8825911 }, 
{0.25151017,0.902834  }, 
{0.00453553,0.9352227 },
{0.00424622,0.9453441 },
{0.00252763,0.95141697},
{0.5477675 ,0.86234814}, 
{2.2185926e-04, 9.5141697e-01},
{0.00141157,0.9352227 },
{0.00111155,0.9493927 },
{0.09547522,0.92712545},
{0.422813  ,0.93117404},
{0.20174089,0.9615384 },
{8.5203187e-04, 9.4939268e-01},
{0.01874428,0.9412955 },
{0.6335937 ,0.92307687}, 
};



float  kerasprevision_MLP_SND_RTT[NUMBIGTESTE] = {1.8327768e-05,
4.236023e-06,
3.5290686e-06,
0.07743705,
0.98019975,
0.95536345,
1.4989369e-05,
0.65045476,
0.98648363,
0.9755945,
0.57813025,
4.529932e-06,
0.98535043,
2.8094544e-05,
0.7552849,
6.6767475e-06,
6.4593037e-06,
6.288847e-06,
0.6563358,
2.8540805e-06,
0.9799291,
0.98624927,
5.160373e-06,
0.9831267,
3.3148497e-06,
4.238403e-06,
3.4761224e-06,
0.97242755,
0.6626097,
0.6574953,
0.61456984,
0.72358394,
0.88786185,
0.0002734,
0.24103558,
0.00453394,
0.9672588,
0.94992554,
0.61701065,
0.20744312,
0.991531,
0.9358436,
0.00010537,
0.4541182,
1.02146705e-05,
0.9814246,
1.8290004e-05,
0.07511385,
2.1026504e-05,
2.855774e-06,
0.6488441,
1.032109e-05,
0.8011534,
0.00144285,
5.5295473e-06,
0.90192306,
0.5506399,
0.47466123,
0.97191536,
0.9550924,
0.54787356,
0.00044485,
0.1229012,
0.9455341,
0.93179584,
0.5811003,
7.583994e-05,
0.885173,
0.9422932,
4.008155e-06,
0.00031477,
3.8212474e-06,
3.634548e-05,
0.9508142,
0.00249116,
0.9849524,
0.56952786,
0.00458694,
4.870861e-06,
0.40863812,
0.56685805,
0.9408608,
0.52175856,
0.00022337,
3.178054e-05,
0.80010635,
0.60095704,
0.98006827,
0.79945266,
1.4208793e-05,
5.376396e-05,
3.315818e-05,
0.64523834,
0.9806338,
0.5241872,
4.1310293e-05,
0.9826679,
2.0268792e-05,
0.52119464,
0.8802206,
0.6003028,
0.97259796,
0.7704789,
4.4914927e-05,
7.957923e-05,
0.7581473,
0.7280926,
0.9409375,
1.25823835e-05,
5.6279705e-06,
0.00014669,
0.98619366,
0.91245914,
4.2363176e-06,
0.00029735,
0.9819785,
0.8197078,
0.98367167,
5.52979e-06,
8.707879e-06,
0.5656488,
0.7376705,
0.93901443,
1.4686899e-05,
4.732721e-06,
0.6267373,
0.06021868,
7.676722e-06,
0.7472863,
5.1630755e-06,
0.8803048,
0.5473686,
2.7540655e-05,
0.9115039,
0.9811549,
0.98570293,
0.31340563,
2.0185056e-05,
0.9852365,
0.49233398,
0.9844617,
2.790704e-05,
3.1421892e-05,
0.7890092,
8.241807e-06,
0.93080145,
0.86859196,
0.97684795,
0.5621748,
0.9248434,
1.3926746e-05,
0.984559,
0.5512953,
0.72911686,
1.8796416e-05,
0.6050702,
4.8188867e-06,
0.6607389,
0.9709287,
2.5599962e-05,
2.9524695e-05,
0.8153515,
0.59916425,
0.97235465,
0.53413236,
8.641276e-06,
0.59650916,
0.00021353,
0.9838484,
0.00016179,
3.554913e-06,
0.6035092,
1.2579396e-05,
0.49193195,
0.8134168,
0.7740631,
9.3315735e-05,
2.4091236e-05,
1.4386181e-05,
0.97860724,
9.394216e-06,
0.07602578,
0.74351996,
0.6401922,
0.9345814,
0.7216154,
0.57564896,
1.4872609e-05,
0.972122,
0.9189232,
0.5839058,
2.4860907e-05,
2.1356558e-05,
0.00470073,
0.8875002,
5.682451e-06,
0.9717287,
0.58265585,
0.90519804,
6.7824594e-06,
0.6660417,
0.04371686,
0.20626844,
0.9406301,
0.9451385,
0.47673142,
5.162342e-06,
0.9783662,
1.7501156e-05,
0.9732595,
0.00081993,
0.5790648,
0.4952707,
0.56291133,
0.9815746,
0.5447012,
0.97003686,
0.95521885,
5.1627158e-06,
0.97735065,
0.91390616,
0.9608533,
0.8684227,
1.43816405e-05,
0.55821806,
5.9550716e-06,
1.2643983e-05,
1.122834e-05,
0.9748966,
0.9695679,
3.1361155e-06,
0.5321628,
7.134788e-05,
0.63616896,
0.81629443,
0.00262451,
0.00021232,
0.75436264,
0.55768764,
3.4700909e-06,
0.6837207,
2.8547013e-06,
0.56593704,
0.6398736,
0.00071959,
0.47834983,
0.5398757,
5.529811e-06,
0.74940485,
0.8342544,
0.8086469,
0.32436457,
0.57688826,
0.97441363,
6.37934e-06,
0.00144058,
0.9861703,
0.00556419,
0.974185,
0.985839,
0.96242076,
0.5955605,
0.8875783,
0.57475144,
0.97233576,
0.97585225,
0.1272022,
0.00027415,
0.96317464,
5.212504e-06,
0.83405274,
0.59438586,
4.2344395e-06,
0.00014444,
0.5942949,
0.9181182,
0.9554799,
3.3226486e-05,
0.9857885,
0.01039616,
0.55225545,
2.852641e-06,
0.59234506,
1.2689561e-05,
0.73953575,
0.7529158,
0.00254375,
1.1883471e-05,
0.9718721,
2.8553466e-06,
3.0296837e-06,
0.97552305,
0.9862851,
8.35706e-05,
0.5891724,
0.00015763,
0.00030383,
0.5832625,
0.05905014,
0.9479697,
0.9756451,
4.889652e-05,
0.7705634,
0.9554799,
0.8958768,
0.982128,
0.21000381,
0.47184357,
0.98308754,
0.5342308,
0.6573366,
0.61726314,
0.9729449,
2.851156e-06,
3.4750187e-06,
4.6776306e-05,
5.6526445e-05,
0.9829416,
0.00023587,
0.6263786,
0.9895109,
9.337695e-06,
0.9724194,
0.980306,
0.01264281,
3.4765335e-06,
0.96438074,
0.94720745,
0.96646464,
9.674788e-06,
0.5883926,
3.6413752e-05,
4.23711e-06,
0.9596447,
0.7481349,
0.9361811,
0.98198205,
0.00015229,
0.00021197,
6.750298e-06,
0.00015857,
0.57303977,
0.9797017,
0.31399998,
0.00054205,
0.74869794,
8.157014e-06,
0.6000725,
0.9783566,
0.9716318,
0.00027775,
0.02548348,
0.67186034,
0.8618086,
3.477505e-06,
0.65905684,
5.158459e-06,
1.5498854e-05,
8.100656e-06,
0.51436734,
0.9871894,
1.2201552e-05,
0.5566537,
7.7054365e-06,
0.9837272,
0.96436214,
0.95989203,
0.64517945,
2.8997618e-05,
0.707261,
0.00042131,
0.96781504,
0.4917393,
0.5497294,
0.5810892,
0.6070635,
0.8233746,
0.5149435,
0.98557574,
0.98480576,
0.9844643,
0.98105854,
0.5718515,
0.9249166,
9.918849e-06,
0.5782407,
0.5147178,
7.839093e-05,
0.54480135,
7.378106e-05,
0.57665753,
0.79255325,
0.9847039,
0.6288743,
0.00031362,
0.97988033,
0.9695166,
0.80028015,
4.483884e-05,
9.548482e-05,
3.174356e-05,
1.9611392e-05,
0.9624231,
3.5624777e-05,
2.8504303e-06,
0.6787617,
6.7173096e-06,
0.9783662,
0.96213293,
0.9667127,
0.97516197,
0.97543657,
5.5298055e-06,
7.467975e-05,
8.143963e-06,
0.9655361,
0.962856,
0.5618676,
0.64017034,
0.04429617,
0.6045329,
0.5962298,
0.6206054,
0.6538789,
0.87240756,
0.5564683,
0.6433211,
0.51948315,
0.6138659,
0.49404615,
0.82373905,
9.919161e-06,
6.012892e-06,
0.01485173,
0.56735724,
0.962662,
0.5742458,
0.9031093,
0.6471864,
1.5259706e-05,
9.467714e-06,
4.2729338e-05,
0.97929996,
4.6591567e-06,
0.96604306,
5.9545773e-06,
0.58270174,
0.9869004,
0.98423916,
0.9829346,
0.0004876,
1.5596059e-05,
0.719434,
0.9722964,
7.661758e-06,
0.2041481,
0.959156,
9.9849065e-05,
0.5587118,
7.634784e-06,
1.1885149e-05,
0.00113401,
5.4470083e-06,
0.00011958,
5.162632e-06,
0.50178504,
2.856041e-06,
1.4537003e-05,
0.97608495,
2.8550144e-06,
0.00010921,
0.534814,
0.9098277,
1.4569786e-05,
0.62763625,
6.289537e-06,
0.00021385,
0.47165853,
0.76159257,
5.164469e-06,
0.61336684,
0.07508896,
0.95309585,
0.8457128,
0.5670926,
0.48343334,
0.9806338,
0.9823656,
0.97169405,
0.984932,
0.9853628,
0.98576456,
0.5543958,
0.97685015,
0.89481515,
0.8271581,
2.8535635e-06,
0.71826255,
0.00028164,
0.9826558,
0.56442726,
0.93348366,
0.5633073,
0.8475836,
0.9889026,
0.84697336,
0.00029148,
0.97253585,
0.9855764,
8.998211e-06,
0.57915425,
6.7373576e-06,
0.5436043,
0.5549779,
0.6672278,
0.95230365,
0.5194887,
2.8531745e-06,
4.6102767e-05,
6.0359107e-05,
9.616624e-06,
0.82979774,
0.96846265,
0.8314778,
0.9728351,
2.8553084e-06,
1.8543362e-05,
3.4785069e-06,
0.50739104,
0.8602843,
0.68354636,
0.98243195,
0.74552256,
9.76959e-06,
7.663863e-06,
0.6330203,
0.96644896,
3.4738723e-06,
0.00048122,
0.95085406,
4.5730603e-06,
5.1631887e-06,
0.9244994,
0.98493147,
0.95064294,
0.60307026,
0.9773171,
0.5897771,
4.234452e-06,
0.00020965,
0.5149994,
0.97177446,
0.98646116,
4.235372e-06,
0.7042268,
0.56315726,
0.6124395,
0.98032576,
0.60286623,
0.9841937,
0.52309674,
0.9385896,
2.9113522e-05,
0.04899029,
0.00013046,
0.9627184,
0.5075326,
1.2960052e-05,
4.236746e-06,
0.653432,
0.9818011,
0.9326125,
0.06088598,
0.5732789,
6.2868685e-06,
0.964933,
0.96563977,
0.58559006,
0.90874624,
0.71628976,
0.97163165,
0.00011964,
0.9353233,
5.529811e-06,
3.538057e-05,
0.62550443,
0.45414606,
0.9858838,
0.9843998,
8.7312865e-06,
3.176419e-06,
0.9790451,
0.9823424,
1.8817258e-05,
0.6409815,
0.52127635,
0.5811193,
0.8873898,
2.856327e-06,
0.97883606,
0.98628044,
0.8951822,
0.48112428,
4.2676465e-06,
0.9615636,
0.59947866,
0.63994664,
0.94668716,
0.98420537,
0.94798756,
0.8779731,
0.98342615,
4.3258246e-06,
0.62407637,
1.0351096e-05,
1.5187435e-05,
0.979423,
0.64132684,
0.930682,
0.98366106,
0.66199785,
0.00031117,
0.00033727,
1.4635752e-05,
0.80286545,
7.362096e-05,
0.6545007,
0.872827,
0.9621831,
0.984138,
0.0001192,
0.5616703,
0.75798243,
0.47508055,
7.156177e-06,
0.96627855,
7.36065e-05,
3.0689112e-05,
3.479197e-06,
0.0025632,
0.9704009,
0.00017711,
0.85398597,
0.77765125,
0.54254526,
0.5950284,
0.7093516,
0.6296855,
0.9439174,
2.2781307e-05,
0.952181,
0.98446065,
5.159379e-06,
0.5779008,
6.3740376e-06,
0.64566153,
0.9862464,
0.00815173,
0.45097917,
0.00070125,
0.9853234,
9.6261545e-05,
0.5676278,
3.7123407e-06,
0.98402005,
1.35696455e-05,
0.970059,
0.8064619,
4.5011743e-06,
0.85660315,
4.871602e-05,
9.560509e-05,
0.00040033,
0.722612,
0.946382,
5.0752647e-06,
9.341525e-06,
0.984461,
0.82745916,
0.60436094,
0.67510694,
0.00027405,
3.9433626e-06,
8.900171e-05,
0.9650268,
7.678237e-05,
0.00055389,
0.97070986,
0.46563852,
0.84606737,
0.00025756,
2.9552536e-06,
0.5930981,
0.5144992,
6.2888894e-06,
0.9565812,
2.3355187e-05,
0.8759199,
5.305658e-06,
9.349385e-06,
0.60387367,
0.85466874,
1.2798395e-05,
1.2050387e-05,
0.9601703,
0.98019975,
1.5483505e-05,
0.959626,
0.83390707,
0.96686834,
0.9582728,
0.00040096,
0.5209294,
0.9741979,
0.4501903,
7.66357e-06,
2.854214e-06,
0.93747324,
5.557901e-05,
2.8503569e-06,
0.64923316,
0.5962889,
1.834893e-05,
0.6948925,
0.5363113,
0.57747114,
0.9863017,
5.4078528e-06,
0.571994,
0.911558,
0.56766164,
0.3162187,
7.169634e-06,
0.9811031,
5.163661e-06,
0.9561061,
0.967998,
0.00013301,
0.9732608,
0.7931332,
4.7359767e-06,
0.55961686,
0.658966,
0.98655844,
0.61478215,
0.59041244,
0.0144076,
0.579363,
0.5971102,
0.9835161,
1.454771e-05,
0.5724443,
0.5848711,
0.97253346,
0.5060149,
3.6689296e-05,
1.1877365e-05,
0.9815443,
0.04378524,
0.5582371,
4.2322067e-06,
2.3441944e-05,
5.1625093e-06,
3.880257e-06,
1.1782823e-05,
0.7136879,
0.98303145,
0.9783662,
1.226959e-05,
6.2878216e-06,
1.2709979e-05,
0.55246633,
0.5723854,
2.4986477e-05,
3.4772265e-06,
0.8816062,
0.5497583,
6.2864488e-06,
3.206937e-05,
0.12762667,
0.6361954,
2.6231437e-05,
1.5526328e-05,
0.00013761,
0.65532976,
0.00016485,
0.8443357,
0.4513378,
0.0001018,
0.9334854,
0.01436762,
0.79543793,
0.9850553,
2.3814568e-05,
1.8562312e-05,
0.94993204,
0.98372877,
0.4854274,
0.59338874,
0.9788037,
0.5934641,
5.7819965e-05,
0.3668989,
0.98562324,
0.94219935,
0.5927235,
0.9109059,
3.234889e-05,
0.8795539,
5.298794e-05,
1.190918e-05,
5.5386525e-05,
0.95061785,
7.5930902e-06,
0.95499533,
1.44098385e-05,
0.20842299,
0.13069473,
1.0039386e-05,
2.4927003e-05,
0.92941314,
5.94731e-05,
0.9835945,
0.9900248,
0.96030235,
3.7775678e-06,
0.98687917,
0.3260125,
0.20720784,
4.1571902e-06,
0.54012126,
2.8545298e-06,
0.97458833,
0.92810106,
0.98291254,
0.9793751,
0.97738516,
0.00150356,
3.4053708e-05,
0.8384494,
5.114514e-06,
0.9869,
0.98336995,
3.652888e-05,
0.98592275,
2.4348701e-05,
5.3114927e-05,
0.5055698,
0.9859935,
0.9797562,
0.04381642,
0.9806338,
1.2722883e-05,
0.6430861,
1.2368191e-05,
0.8095961,
0.50545675,
3.476391e-06,
1.5637135e-05,
0.9578152,
0.9846889,
0.00013526,
0.5169806,
0.00027274,
0.00063412,
0.5690509,
0.86540097,
0.1267822,
0.9195869,
5.528345e-06,
0.07492836,
6.289183e-06,
0.97100645,
0.9851879,
3.6355557e-06,
0.58541024,
0.5014041,
0.90567446,
0.00017514,
0.5393991,
0.9825746,
0.53213257,
6.8048503e-06,
4.525649e-06,
0.9780919,
0.9671849,
0.94425166,
0.985361,
4.23614e-06,
0.12710352,
0.6874888,
0.9844918,
0.98452616,
0.8185644,
0.12625414,
0.7741577,
0.6576459,
0.937429,
2.0696734e-05,
2.8540235e-06,
0.96358055,
0.96018565,
5.4414802e-05,
4.2371903e-06,
0.9822557,
4.2361844e-06,
0.8740451,
0.20532937,
9.517458e-06,
0.20472527,
0.7388088,
0.95878536,
5.4834145e-06,
0.9797976,
2.8490035e-06,
0.9448522,
0.94030213,
0.02496005,
0.5317818,
0.00021242,
9.802433e-05,
0.12660384,
0.9764451,
0.98194855,
1.18482685e-05,
5.775516e-06,
0.8289723,
7.56124e-05,
0.9851868,
2.8536588e-06,
2.391564e-05,
0.9185933,
0.93642366,
0.5072946,
0.9855759,
5.760598e-06,
0.96922195,
0.95719916,
0.55916256,
0.3669064,
0.9554079,
0.95967865,
0.27091235,
0.94840103,
0.75564057,
0.5707584,
0.65621567,
0.9850102,
3.145682e-05,
0.9829059,
3.4793097e-06,
0.9367662,
0.8908197,
3.0811e-06,
0.5776568,
5.1627258e-06,
0.98376095,
0.20759553,
0.8894407,
0.3142075,
0.57495254,
4.2872516e-06,
0.88245636,
4.0072564e-06,
1.6564358e-05,
0.98415875,
7.98976e-06,
4.529932e-06,
0.9835813,
0.59096724,
5.4992247e-06,
0.7828613,
1.1798059e-05,
3.2106524e-05,
0.96721524,
2.0338943e-05,
0.61834794,
0.9682384,
2.8522277e-06,
3.4236275e-06,
0.3132419,
3.7685113e-05,
0.8099834,
0.6622458,
1.2689924e-05,
0.98523927,
0.9733588,
5.8307305e-06,
0.59532154,
0.5038925,
0.88223636,
2.0413232e-05,
0.00028854,
0.9607616,
0.9863547,
0.98809135,
9.144027e-05,
0.9488119,
0.00016566,
0.66283536,
0.9838471,
0.7627722,
8.419347e-06,
0.00028312,
1.8161643e-05,
2.3752966e-05,
0.8764631,
4.137963e-06,
9.6461314e-05,
0.54571784,
0.9849106,
4.239163e-06,
0.838528,
0.9589566,
5.2808127e-06,
5.1639076e-06,
0.88873744,
2.8532722e-06,
0.9806338,
0.952251,
0.6366951,
0.61434,
0.5672548,
0.65726674,
0.98417425,
0.0004366,
0.00029998,
0.96964276,
3.386736e-05,
0.5621449,
0.6960098,
0.72579944,
0.8643859,
9.960448e-05,
0.00011097,
0.8150938,
0.62769544,
0.6022762,
6.9686007e-06,
0.69448364,
0.9802253,
4.6494097e-06,
0.00022168,
0.6581404,
0.4491004,
0.5525836,
0.61414695,
2.6243648e-05,
0.55609185,
0.9725358,
0.61336386,
4.362693e-06,
1.9490668e-05,
0.9830147,
0.95272005,
0.9651337,
3.4746574e-06,
0.9206112,
1.2665042e-05,
0.64532876,
0.00035519,
2.9467932e-05,
9.392979e-06,
0.6628922,
0.5592502,
0.02736095,
1.8657154e-05,
1.0529202e-05,
0.00010304,
1.0512847e-05,
0.9839019,
1.1040923e-05,
3.4743825e-06,
1.2097091e-05,
0.977264,
2.9337827e-05,
0.9675809,
0.62929344,
3.4415175e-06,
0.65431297,
0.53340846,
0.9215291,
4.941468e-05,
0.4631629,
0.98203176,
0.6317801,
0.15283072,
9.383149e-06,
0.9231255,
0.98469275,
0.5535816,
6.5904965e-06,
0.98520243,
0.48627397,
1.29947175e-05,
0.00038336,
5.1635334e-06,
2.0556525e-05,
0.01472819,
4.3044415e-06,
0.57142574,
0.98231256,
0.00033186,
0.6263413,
4.239349e-06,
9.383901e-06,
2.850509e-06,
0.7039674,
0.9867745,
3.4771867e-06,
0.6219902,
1.0392867e-05,
0.44971198,
7.674453e-06,
0.6247674,
0.000311,
4.263035e-05,
0.5235149,
0.98160076,
0.00020004,
0.57919586,
0.970635,
0.9803693,
0.5109841,
0.00018381,
0.5606394,
0.57056135,
0.760386,
1.3021762e-05,
5.1857332e-05,
0.5412168,
3.4792367e-06,
0.6863659,
0.9806338,
0.6377721,
6.1950515e-05,
0.9845283,
0.72463393,
0.9749713,
0.07695688,
0.62779474,
0.65245444,
0.9789388,
0.93377274,
7.977061e-06,
3.121203e-05,
3.7860432e-06,
0.47982222,
4.043937e-05,
0.64143455,
0.5707359,
0.71420336,
0.9445488,
0.98236257,
7.441202e-06,
0.77675927,
0.5478724,
1.5395353e-05,
3.4759832e-06,
3.4784869e-06,
0.96540576,
0.00018256,
0.9771199,
0.67140263,
9.461992e-06,
1.544591e-05,
8.418311e-06,
0.9231369,
1.9254012e-05,
0.9612798,
0.9873935,
0.98266786,
0.51459324,
1.15303665e-05,
0.94400716,
4.529932e-06,
0.638981,
2.8121593e-05,
0.9792034,
0.55896825,
0.9878062,
0.9695685,
0.98418033,
0.6943445,
0.0001057,
2.4555231e-05,
3.478447e-06,
0.9788396,
0.984258,
0.6259361,
0.00021056,
0.0005231,
0.6877229,
0.5792225,
0.9841767,
3.7075854e-06,
0.5624927,
0.01419265,
0.83509755,
0.89720565,
0.8058542,
0.9835964,
2.8462542e-05,
0.00070091,
0.56808025,
0.6458812,
0.9725528,
0.00257836,
0.9558461,
3.7306681e-06,
0.98628503,
7.085536e-05,
0.4510117,
0.7563249,
4.6805158e-06,
0.9859524,
3.1438053e-06,
0.000819,
0.9686056,
0.9526091,
0.00017434,
4.8909415e-06,
0.5292105,
0.9022782,
0.56285614,
4.238706e-06,
0.9204235,
0.73171544,
0.9491006,
0.9698386,
0.00021835,
0.7596249,
0.967884,
0.9368517,
0.8632986,
0.47860193,
0.00016905,
0.04347943,
5.2281716e-06,
0.97994834,
0.5369759,
0.5898804,
0.98707557,
4.236447e-06,
0.6465693,
0.9409232,
0.98561114,
0.933024,
0.981152,
4.529906e-06,
2.8542086e-06,
2.8551178e-06,
0.6305881,
0.9871894,
0.48607016,
0.50805557,
3.4046939e-06,
0.00031312,
1.9459541e-05,
4.2382817e-06,
5.527502e-06,
4.952215e-06,
0.6009817,
0.66616875,
0.6479219,
0.20554425,
0.86692756,
0.9826679,
0.9850258,
4.2351303e-06,
0.46050432,
0.7032867,
9.9853256e-05,
9.4251445e-05,
0.985361,
6.750298e-06,
0.81419843,
0.9696835,
0.00032355,
5.5298005e-06,
0.95369893,
8.7672315e-06,
5.164213e-06,
5.529811e-06,
0.9429288,
0.59981585,
0.00012122,
5.2099716e-05,
1.1837979e-05,
0.88793784,
0.00010788,
0.9819654,
0.9815698,
6.733145e-06,
0.5597235,
0.81881475,
0.5107798,
1.6036678e-05,
2.4084666e-05,
0.57232136,
3.4796615e-06,
0.5705618,
0.9545893,
0.5159691,
0.97838193,
0.92646146,
0.67449486,
7.3312476e-06,
0.6388389,
7.534572e-05,
0.7668925,
0.98147416,
0.3139698,
0.9874553,
0.93995726,
6.3592715e-06,
0.5741183,
0.969831,
2.8529648e-06,
0.59804803,
4.2575166e-06,
0.60243297,
0.75314265,
0.00014817,
0.9903102,
0.5811827,
7.188337e-05,
0.9471149,
5.9606693e-05,
0.9854751,
0.97470933,
1.0411854e-05,
0.61304855,
0.5400458,
0.9389032,
0.5724786,
5.2340088e-06,
0.9128381,
0.00013288,
0.7919064,
2.8509767e-06,
0.9862168,
2.9362966e-06,
0.00040059,
0.7856179,
1.2457661e-05,
0.96914107,
6.3978064e-06,
0.60416967,
0.984929,
0.5626474,
0.9784873,
1.0412708e-05,
0.9850785,
0.49452674,
0.6022694,
0.5860928,
1.8868708e-05,
0.00025753,
6.7502206e-06,
5.529811e-06,
0.94280523,
0.9399597,
4.2324573e-06,
0.18182853,
0.00800444,
0.5567943,
0.8993385,
0.98547745,
0.94979346,
0.3148643,
9.575645e-06,
4.2389283e-06,
0.7572761,
0.9046149,
1.4373619e-05,
0.9062554,
0.8181147,
0.77883273,
0.6216119,
0.45587787,
0.61866444,
0.9833845,
0.7007733,
0.4880324,
0.5376028,
0.20506455,
0.5512703,
3.5392786e-05,
2.8536315e-06,
0.4844362,
2.8938082e-06,
0.8062564,
0.9490671,
0.98532933,
3.4132194e-05,
9.771091e-06,
0.97519,
0.97883946,
0.50771445,
0.9752916,
1.9116136e-05,
0.00021003,
0.9727321,
0.98447573,
0.00044104,
0.625668,
0.9046459,
0.9487231,
0.9619826,
0.95717776,
0.6526627,
0.9811091,
0.46506917,
0.12309752,
5.400354e-06,
0.58555496,
0.6215311,
0.04370028,
0.8309658,
0.5989661,
0.97836626,
0.5324647,
0.98076695,
0.970393,
0.58433646,
0.88880587,
1.903077e-05,
0.801882,
0.7132044,
0.00012065,
1.4984411e-05,
0.97199327,
0.26788154,
0.96414006,
0.0001129,
0.9806338,
0.96674556,
1.5264292e-05,
0.97934407,
0.9568081,
0.98337054,
9.97257e-06,
0.63527673,
0.984527,
0.5978681,
0.7559557,
0.9763892,
0.95589155,
0.9340818,
6.750298e-06,
0.7312756,
5.2652535e-06,
0.9556092,
0.6395788,
5.158257e-06,
0.8669345,
0.616225,
0.00563512,
0.86517537,
0.59186184,
0.9846942,
0.12107393,
5.1604025e-06,
0.93982387,
5.163819e-06,
3.6965348e-06,
0.50759166,
0.9179397,
1.122319e-05,
0.9822769,
0.31671408,
0.8253177,
3.4745483e-06,
0.96181804,
0.9904625,
0.98442405,
5.1586508e-06,
3.343057e-05,
0.83826524,
0.8271486,
1.6146187e-05,
0.55280274,
0.57511324,
0.03077881,
0.91390437,
0.80947113,
4.434866e-06,
1.2672823e-05,
0.9508688,
0.8438636,
1.4437901e-05,
2.6024056e-05,
0.44025916,
2.8549355e-06,
0.9555551,
0.323574,
0.00036878,
0.58667475,
0.24230485,
0.49848187,
3.4776178e-06,
1.8921231e-05,
0.5656785,
0.97253585,
0.8599401,
9.343725e-06,
0.47595814,
7.663263e-06,
3.5214675e-06,
8.116106e-06,
2.1486301e-05,
3.7373236e-06,
1.1822455e-05,
0.62781805,
0.9839415,
0.96068466,
0.9792848,
0.2272467,
0.70003915,
0.9367429,
0.98528814,
4.237635e-06,
1.0261575e-05,
0.6027031,
0.98877907,
4.232667e-06,
0.98178566,
0.00016196,
8.440377e-06,
0.00081749,
0.7004741,
0.9884394,
3.4789182e-06,
0.55429304,
5.7040825e-06,
0.9858871,
2.8556678e-06,
0.63967574,
0.6323702,
5.1629227e-06,
1.3172466e-05,
4.239276e-06,
1.7256569e-05,
0.58321506,
6.3086877e-06,
0.94720185,
0.9811377,
0.6029096,
0.5590684,
0.5458123,
0.7088699,
0.9818934,
7.8246885e-06,
0.6767826,
2.2536804e-05,
0.9207874,
0.9886176,
5.158508e-06,
0.58686554,
0.6342489,
0.9757451,
0.98125225,
0.56318504,
0.7126574,
0.11342973,
0.8228388,
0.67447454,
0.9007265,
9.691244e-06,
0.5537982,
0.98157233,
0.61496305,
5.165709e-05,
0.56107616,
0.9798541,
0.49974272,
2.0693991e-05,
7.664857e-06,
0.23975596,
2.901468e-06,
4.088319e-05,
0.0001527,
0.9858727,
7.857839e-06,
0.58614796,
0.6680275,
0.5667315,
0.98726654,
0.9836609,
0.92895484,
0.5309827,
2.3801194e-05,
1.517494e-05,
0.92925614,
0.98105854,
3.4776842e-06,
0.5795594,
7.5187627e-06,
1.8625513e-05,
0.6848024,
0.56752604,
0.8953038,
4.5298802e-06,
0.56456304,
4.238516e-06,
0.98574734,
0.5347716,
0.5140206,
0.9620504,
0.84628254,
0.6502788,
0.9461945,
0.9758419,
0.48494497,
0.91965425,
0.8689963,
0.96052366,
0.000172,
1.8296407e-05,
0.6894118,
0.91051126,
0.0758206,
0.5337648,
0.00028553,
0.7366826,
0.9779609,
0.0025408,
5.5851633e-06,
3.4784737e-06,
0.9756962,
0.97882193,
0.9411646,
0.57460546,
0.55163,
0.00032064,
0.9877087,
0.70680755,
0.9410149,
0.9841546,
6.1096835e-06,
0.46804428,
1.5215906e-05,
2.852837e-06,
0.9826679,
3.6326999e-06,
9.4611e-05,
0.9787571,
0.96209866,
0.90470606,
9.8652505e-05,
0.45269755,
0.9608446,
0.8781479,
0.7796655,
0.9437674,
0.5120433,
0.00012254,
1.8741432e-05,
0.64234656,
0.7660191,
0.72959083,
0.5953887,
0.9866098,
0.5065551,
0.00021744,
0.9806325,
0.98458916,
0.7488287,
0.98657584,
4.6811645e-05,
6.7268998e-06,
1.661475e-05,
0.5094982,
0.98613566,
0.9420967,
0.5932256,
0.97890335,
0.60347545,
0.00032323,
0.4784061,
0.8902556,
4.529932e-06,
0.5878579,
2.854753e-06,
0.61857283,
0.66278106,
1.2770657e-05,
4.238185e-06,
0.7871639,
0.02501179,
0.00013588,
0.93366176,
0.00076547,
0.5663975,
0.9688588,
6.7771184e-06,
0.94562995,
7.585383e-05,
9.6204836e-05,
0.59548795,
7.1041854e-06,
1.9790781e-05,
0.6136016,
0.6348109,
0.9844643,
0.8566796,
0.9499054,
0.9853367,
0.9854041,
5.2193005e-05,
0.7796147,
2.85306e-06,
0.00021084,
0.98680633,
0.60285217,
6.750298e-06,
0.959852,
0.98598194,
0.45147768,
0.981991,
0.96475106,
0.5334426,
0.9677342,
3.4028694e-06,
0.56032914,
0.686313,
0.98480654,
5.1605402e-06,
0.00081613,
0.00886781,
2.8548973e-06,
0.7860778,
0.94922876,
0.8875927,
0.5711024,
0.5651183,
3.2518142e-06,
0.61063033,
0.45515087,
0.9481551,
6.5967156e-06,
0.8251393,
0.8873396,
0.00074667,
0.00021636,
0.00027128,
0.9462354,
0.7410049,
0.50242096,
0.94194156,
0.98470384,
1.2357947e-05,
0.984185,
7.16614e-05,
0.05826394,
0.9469428,
0.95434695,
0.6039249,
0.01426633,
0.9724564,
0.9826773,
0.98557645,
0.8216035,
0.7231631,
0.5857698,
9.98523e-05,
0.95174235,
0.8485049,
0.00812685,
0.7598753,
0.16892304,
0.00012272,
9.416281e-06,
0.6248362,
0.95400286,
0.8463109,
0.98761064,
0.95002145,
0.8567821,
0.00088043,
0.747328,
0.89345765,
5.1633365e-06,
0.60002947,
0.7283912,
0.20617053,
0.53475904,
0.66671073,
0.01492688,
4.078366e-06,
0.9797056,
0.56949204,
0.9837891,
0.9559123,
0.000127,
0.5592881,
0.966364,
0.91185135,
0.98494357,
4.2188926e-06,
9.9853256e-05,
0.6159101,
5.5298055e-06,
0.01469124,
0.7347567,
6.287348e-06,
0.87846434,
0.9729672,
0.87302405,
0.8865485,
7.390591e-05,
0.4921798,
5.1603924e-06,
0.70940614,
0.12759846,
0.00460775,
0.92307806,
0.9412358,
0.52854806,
0.00012761,
9.532974e-06,
0.8818044,
0.5888696,
0.59304786,
0.44609168,
0.65799874,
0.05995944,
0.00051091,
7.055579e-05,
0.8930178,
0.58422923,
0.826598,
0.7859579,
0.9248031,
0.45524612,
0.6255887,
0.98640263,
4.473158e-06,
0.9679688,
0.98318565,
0.0438059,
0.88777554,
3.478089e-06,
0.9849981,
0.9706949,
1.2517122e-05,
3.792888e-06,
4.529932e-06,
0.00013466,
0.88392663,
0.59833443,
0.00020904,
0.44854292,
0.57202965,
9.484605e-06,
0.89633965,
0.9846796,
1.4977667e-05,
4.1689666e-05,
0.8826462,
2.853909e-06,
0.7044946,
0.41412845,
0.47694534,
0.89355236,
0.5381828,
0.94845843,
0.6867201,
1.0485032e-05,
9.137635e-06,
0.04392377,
0.01949034,
0.8277321,
0.9540064,
0.4729447,
0.5720583,
0.07481309,
8.626003e-05,
0.00252581,
0.98375744,
0.9855028,
0.98663056,
6.2867903e-06,
0.9868813,
0.9841677,
0.98648703,
0.96290576,
0.6405035,
0.9402783,
0.98651576,
0.9829318,
0.4527893,
};





    //float kerasarray[] = {0.10858772,0.43363177,0.94129555,0.72319206,0.69356146,0.93117409,0.0556843,0.11762462,0.93522267};
    //float  kerasprevision =0.5328561;

    //float kerasarray[] = {0.03460024,0.10421212,0.93522267,0.47518336,0.47817113,0.94534413,0.17758868,0.76031619,0.93319838};

    //float  kerasprevision =0.5068154;

    float myfloatOutput_MLP_SND_RTT[1] = {0};


    printf("###(  keras , keras2c,  erro  )\n");

    for(int i=0; i<NUMBIGTESTE;i++)
    {

            myInput.array = kerasarray_MLP_SND_RTT[i];
            myInput.ndim = 1;
            myInput.numel = 2;
            myInput.shape[0] = 2;
            myInput.shape[1] = 1;
            myInput.shape[2] = 1;  //k2c_tensor test1_dense_8_input_input = {&test1_dense_8_input_input_array[0],1,2,{2,1,1,1,1}};; 
            myInput.shape[3] = 1;
            myInput.shape[4] = 1;


            myfloatOutput_MLP_SND_RTT[1] = {0};
            myOutput.array=myfloatOutput_MLP_SND_RTT;
            myOutput.ndim=1;
            myOutput.numel=1;
            myOutput.shape[0]=1;
            myOutput.shape[1]=1;
            myOutput.shape[2]=1;      //k2c_tensor c_dense_11_test1 = {&c_dense_11_test1_array[0],1,1,{1,1,1,1,1}}; ; 

            myOutput.shape[3]=1;
            myOutput.shape[4]=1;



            ptModel->keras2c_model(&myInput,&myOutput); 

            printf("%3d(%f,%f,%e)\n", i,kerasprevision[i], myOutput.array[0],fabsf(kerasprevision_MLP_SND_RTT[i]-myOutput.array[0]));
            if(fabsf(kerasprevision_MLP_SND_RTT[i]-myOutput.array[0]) >= 0.0001)
            {
                cout << "Erro grande para " << "i= " << i;
                cin >> c;
            }

    }




    ptModel->keras2c_model_terminate();
    delete ptModel;




}


void TestMLP_SND_RTT_FromNs3(Model* parModel, float parSND, float parRTT)
{
    k2c_tensor myInput,myOutput;
    float myfloatOutput[1] = {0};
    float kerasarray_MLP_SND_RTT[2];
    kerasarray_MLP_SND_RTT[0] = parSND;    
    kerasarray_MLP_SND_RTT[1] = parRTT;
    myInput.array = kerasarray_MLP_SND_RTT;
    myInput.ndim = 1;
    myInput.numel = 2;
    myInput.shape[0] = 2;
    myInput.shape[1] = 1;
    myInput.shape[2] = 1;  //k2c_tensor test1_dense_8_input_input = {&test1_dense_8_input_input_array[0],1,2,{2,1,1,1,1}};; 
    myInput.shape[3] = 1;
    myInput.shape[4] = 1;



    myOutput.array=myfloatOutput;
    myOutput.ndim=1;
    myOutput.numel=1;
    myOutput.shape[0]=1;
    myOutput.shape[1]=1;
    myOutput.shape[2]=1;      //k2c_tensor c_dense_11_test1 = {&c_dense_11_test1_array[0],1,1,{1,1,1,1,1}}; ; 

    myOutput.shape[3]=1;
    myOutput.shape[4]=1;
    parModel->keras2c_model(&myInput,&myOutput);

    cout << myOutput.array[0]<<"\n";

}


void TestCNN_ACK_SND_RTT_FromNs3(Model *ptModel, float* parInput)
{

char c;
std::cout<< "### ns3 Test CNN (ACK SND, RTT)####\n";
std::cout<< "Pressione qualquer tecla>>";
cin >> c;

k2c_tensor myInput,myOutput;


ptModel->keras2c_model_initialize();

for (int i =0; i<9;i++)
{
    kerasarray_CNN_BigTest[i] = parInput[i];
}


myInput.array = &kerasarray_CNN_BigTest[0];
myInput.ndim = 3;
myInput.numel = 9;
myInput.shape[0] = 3;
myInput.shape[1] = 3;
myInput.shape[2] = 1;
myInput.shape[3] = 1;
myInput.shape[4] = 1;


myfloatOutput_CNN_BigTest[1] = {0};
myOutput.array=myfloatOutput_CNN_BigTest;
myOutput.ndim=1;
myOutput.numel=1;
myOutput.shape[0]=1;
myOutput.shape[1]=1;
myOutput.shape[2]=1;
myOutput.shape[3]=1;
myOutput.shape[4]=1;



ptModel->keras2c_model(&myInput,&myOutput); 

cout << myOutput.array[0]<<"\n";

}


void TestCNN_ACK_RTT_FromNs3 (Model *ptModel, float* parInput)
{
char c;
std::cout<< "### ns3 Test CNN (ACK,RTT)####\n";
std::cout<< "Pressione qualquer tecla>>";
cin >> c;

k2c_tensor myInput,myOutput;


ptModel->keras2c_model_initialize();

for (int i =0; i<6;i++)
{
    kerasarray_CNN_ACK_RTT_Bigtest[i] = parInput[i];
}


myInput.array = &kerasarray_CNN_ACK_RTT_Bigtest[0];
myInput.ndim = 3;
myInput.numel = 6;
myInput.shape[0] = 3;
myInput.shape[1] = 2;
myInput.shape[2] = 1;
myInput.shape[3] = 1;
myInput.shape[4] = 1;


myfloatOutput_CNN_ACK_RTT_BigTest[1] = {0};
myOutput.array=myfloatOutput_CNN_ACK_RTT_BigTest;
myOutput.ndim=1;
myOutput.numel=1;
myOutput.shape[0]=1;
myOutput.shape[1]=1;
myOutput.shape[2]=1;
myOutput.shape[3]=1;
myOutput.shape[4]=1;



ptModel->keras2c_model(&myInput,&myOutput); 

cout << myOutput.array[0]<<"\n";


}



void BigTestCNN_ACK_SND_RTT(Model *ptModel)
{

char c;
std::cout<< "### Big Test CNN (ACK SND, RTT)####\n";
std::cout<< "Pressione qualquer tecla>>";
cin >> c;

k2c_tensor myInput,myOutput;


ptModel->keras2c_model_initialize();

std::cout << "carregando dados .....\n";

fstream my_file_keras_array, my_file_keras_prevision;
	
my_file_keras_array.open("./kerasarray_CNN.txt", ios::in);
if (!my_file_keras_array) {
	cout << "No such file";
    return;

}

my_file_keras_prevision.open("./kerasprevision_CNN.txt", ios::in);
if (!my_file_keras_prevision) {
	cout << "No such file";
    return;

}


int j =0;
int linefile=1;
string line_keras_array;
std::string         value;
std::stringstream   linestream_keras_array(" ");
string line_keras_prevision;
//std::string         value_keras_prevision;
std::stringstream   linestream_keras_prevision(" ");



while(getline(my_file_keras_array,line_keras_array) && getline(my_file_keras_prevision,line_keras_prevision))
{
    j=0;
    cout <<"line" << linefile <<":" << line_keras_array <<"\n";
    linestream_keras_array.clear();
    linestream_keras_array.str(line_keras_array);

    while(getline(linestream_keras_array,value,','))
    {
        //std::cout << "Value(" << value << ")\n";
        kerasarray_CNN_BigTest[j] = stof(value);
        j++;
    }
    std::cout << "Line keras array Finished" << std::endl;
    for(int k=0; k<j;k++)
    {
        std::cout << kerasarray_CNN_BigTest[k] <<" ";
    }
    cout <<"\n";
    
    //cin >>c;

    linestream_keras_prevision.clear();
    linestream_keras_prevision.str(line_keras_prevision);
    

    while(getline(linestream_keras_prevision,value,','))
    {
        //std::cout << "Value(" << value << ")\n";
        kerasprevision_CNN_BigTest = stof(value);
        j++;
    }
    //std::cout << "Line Finished kerasprevision" << std::endl;
    //std::cout << kerasprevision_CNN <<" ";    
    cout <<"\n";

        myInput.array = &kerasarray_CNN_BigTest[0];
        myInput.ndim = 3;
        myInput.numel = 9;
        myInput.shape[0] = 3;
        myInput.shape[1] = 3;
        myInput.shape[2] = 1;
        myInput.shape[3] = 1;
        myInput.shape[4] = 1;


        myfloatOutput_CNN_BigTest[1] = {0};
        myOutput.array=myfloatOutput_CNN_BigTest;
        myOutput.ndim=1;
        myOutput.numel=1;
        myOutput.shape[0]=1;
        myOutput.shape[1]=1;
        myOutput.shape[2]=1;
        myOutput.shape[3]=1;
        myOutput.shape[4]=1;



        ptModel->keras2c_model(&myInput,&myOutput); 

        printf("%3d(%f,%f,%e)\n", linefile,kerasprevision_CNN_BigTest, myOutput.array[0],fabsf(kerasprevision_CNN_BigTest-myOutput.array[0]));
        if(fabsf(kerasprevision_CNN_BigTest-myOutput.array[0]) >=0.0001)
        {
                cout << "Erro grande para " << "i= " << linefile;
                cin >> c;


        }

    linefile++;
}
my_file_keras_array.close();
my_file_keras_prevision.close();

cin >> c;

}




void BigTestCNN_ACK_RTT(Model *ptModel)
{

char c;
std::cout<< "### Big Test CNN (ACK, RTT)####\n";
std::cout<< "Pressione qualquer tecla>>";
cin >> c;

k2c_tensor myInput,myOutput;


ptModel->keras2c_model_initialize();

std::cout << "carregando dados .....\n";

fstream my_file_keras_array, my_file_keras_prevision;
	
my_file_keras_array.open("./kerasarray_CNN_ACK_RTT.txt", ios::in);
if (!my_file_keras_array) {
	cout << "No such file";
    return;

}

my_file_keras_prevision.open("./kerasprevision_CNN_ACK_RTT.txt", ios::in);
if (!my_file_keras_prevision) {
	cout << "No such file";
    return;

}


int j =0;
int linefile=1;
string line_keras_array;
std::string         value;
std::stringstream   linestream_keras_array(" ");
string line_keras_prevision;
//std::string         value_keras_prevision;
std::stringstream   linestream_keras_prevision(" ");



while(getline(my_file_keras_array,line_keras_array) && getline(my_file_keras_prevision,line_keras_prevision))
{
    j=0;
    //cout <<"line" << linefile <<":" << line_keras_array <<"\n";
    linestream_keras_array.clear();
    linestream_keras_array.str(line_keras_array);

    while(getline(linestream_keras_array,value,','))
    {
        //std::cout << "Value(" << value << ")\n";
        kerasarray_CNN_ACK_RTT_Bigtest[j] = stof(value);
        j++;
    }
    //std::cout << "Line keras array Finished" << std::endl;
    for(int k=0; k<j;k++)
    {
        //std::cout << kerasarray_CNN_ACK_RTT_Bigtest[k] <<" ";
    }
    cout <<"\n";
    
    //cin >>c;

    linestream_keras_prevision.clear();
    linestream_keras_prevision.str(line_keras_prevision);
    

    while(getline(linestream_keras_prevision,value,','))
    {
        //std::cout << "Value(" << value << ")\n";
        kerasprevision_CNN_ACK_RTT_BigTest = stof(value);
        j++;
    }
    //std::cout << "Line Finished kerasprevision" << std::endl;
    //std::cout << kerasprevision_CNN <<" ";    
    cout <<"\n";

        myInput.array = &kerasarray_CNN_ACK_RTT_Bigtest[0];
        myInput.ndim = 3;
        myInput.numel = 6;
        myInput.shape[0] = 3;
        myInput.shape[1] = 2;
        myInput.shape[2] = 1;//3,6,{3,2,1,1,1}
        myInput.shape[3] = 1;
        myInput.shape[4] = 1;


        myfloatOutput_CNN_ACK_RTT_BigTest[1] = {0};
        myOutput.array=myfloatOutput_CNN_ACK_RTT_BigTest;
        myOutput.ndim=1;
        myOutput.numel=1;
        myOutput.shape[0]=1;//,1,1,{1,1,1,1,1}
        myOutput.shape[1]=1;
        myOutput.shape[2]=1;
        myOutput.shape[3]=1;
        myOutput.shape[4]=1;



        ptModel->keras2c_model(&myInput,&myOutput); 

        printf("###(  keras , keras2c,  erro  )\n");
        printf("%3d(%f,%f,%e)\n", linefile,kerasprevision_CNN_ACK_RTT_BigTest, myOutput.array[0],fabsf(kerasprevision_CNN_ACK_RTT_BigTest-myOutput.array[0]));
        if(fabsf(kerasprevision_CNN_ACK_RTT_BigTest-myOutput.array[0]) >=0.0001)
        {
                cout << "Erro grande para " << "i= " << linefile;
                cin >> c;


        }

    linefile++;
}
my_file_keras_array.close();
my_file_keras_prevision.close();

cin >> c;

}


void AverageTest(Model* ptModel)
{


   char c;

   cout << "Entrando Teste de tempo mÃ©dio de previsÃ£o!!\n";
   cin >> c;
   k2c_tensor myInput[NUMTESTE],myOutput[NUMTESTE];

   float kerasarray[NUMTESTE][3] ={{0.34607658,0.8471641,0.88461536},
                                    {0.07397943,0.05546552,0.9392713},
                                    {0.03154556,0.00609445,0.88866395},
                                    {0.03423448,0.00624618,0.9372469},
                                    {0.24825948,0.23142174,0.9615384},
                                    {0.03226006,0.06410623,0.8562753},
                                    {0.05676125,0.11398052,0.9251012},
                                    {0.3504803,0.34982705,0.92712545},
                                    {0.5209555,0.6000636,0.95546556},
                                    {0.03154682,0.03149462,0.93117404},
                                    {0.4907967,0.47373784,0.93319833},
                                    {0.13473004,0.12939872,0.8765182},
                                    {0.38282362,0.23075421,0.9392713},
                                    {0.358018,0.61572343,0.9919028},
                                    {0.12006561,0.1534984,0.8825911},
                                    {0.40851563,0.7163719,0.979757},
                                    {0.5386587,0.50438213,0.9251012},
                                    {0.15529582,0.64911336,0.8562753},
                                    {0.03244964,0.00310354,0.9453441},
                                    {0.8013233,0.84047633,0.8562753}
                                    };




    float  kerasprevision[NUMTESTE] = {0.08693514,
                                    0.96083295,
                                    0.25547132,
                                    0.9643034,
                                    0.9796477,
                                    0.0210398,
                                    0.90623903,
                                    0.50482726,
                                    0.8169838,
                                    0.94521517,
                                    0.3632805,
                                    0.05183066,
                                    0.60677016,
                                    0.9985879,
                                    0.10593946,
                                    0.9946059,
                                    0.15288067,
                                    0.03036362,
                                    0.98268235,
                                    0.00015479
                                    };





    //float kerasarray[] = {0.10858772,0.43363177,0.94129555,0.72319206,0.69356146,0.93117409,0.0556843,0.11762462,0.93522267};
    //float  kerasprevision =0.5328561;

    //float kerasarray[] = {0.03460024,0.10421212,0.93522267,0.47518336,0.47817113,0.94534413,0.17758868,0.76031619,0.93319838};

    //float  kerasprevision =0.5068154;

    float myfloatOutput[NUMTESTE][1] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

   

    for(int i=0; i<NUMTESTE;i++)
    {

            myInput[i].array = kerasarray[i];
            myInput[i].ndim = 1;
            myInput[i].numel = 3;
            myInput[i].shape[0] = 3;
            myInput[i].shape[1] = 1;
            myInput[i].shape[2] = 1;  //k2c_tensor test1_dense_68_input_1_input = {&test1_dense_68_input_1_input_array[0],1,3,{3,1,1,1,1}}; 
            myInput[i].shape[3] = 1;
            myInput[i].shape[4] = 1;


            myfloatOutput[i][1] = {0};
            myOutput[i].array=myfloatOutput[i];
            myOutput[i].ndim=1;
            myOutput[i].numel=1;
            myOutput[i].shape[0]=1;
            myOutput[i].shape[1]=1;
            myOutput[i].shape[2]=1;      // k2c_tensor c_dense_70_1_test1 = {&c_dense_70_1_test1_array[0],1,1,{1,1,1,1,1}}; 

            myOutput[i].shape[3]=1;
            myOutput[i].shape[4]=1;




            //printf("%3d(%f,%f,%e)\n", i,kerasprevision[i], myOutput.array[0],fabsf(kerasprevision[i]-myOutput.array[0]));

    }
    clock_t t0 = clock(); 
    ptModel->keras2c_model(&myInput[0],&myOutput[0]);
    ptModel->keras2c_model(&myInput[1],&myOutput[1]);     
    ptModel->keras2c_model(&myInput[2],&myOutput[2]); 
    ptModel->keras2c_model(&myInput[3],&myOutput[3]); 
    ptModel->keras2c_model(&myInput[4],&myOutput[4]); 
    ptModel->keras2c_model(&myInput[5],&myOutput[5]);
    ptModel->keras2c_model(&myInput[6],&myOutput[6]); 
    ptModel->keras2c_model(&myInput[7],&myOutput[7]); 
    ptModel->keras2c_model(&myInput[8],&myOutput[8]); 
    ptModel->keras2c_model(&myInput[9],&myOutput[9]); 
    ptModel->keras2c_model(&myInput[10],&myOutput[10]); 
    ptModel->keras2c_model(&myInput[11],&myOutput[11]); 
    ptModel->keras2c_model(&myInput[12],&myOutput[12]); 
    ptModel->keras2c_model(&myInput[13],&myOutput[13]); 
    ptModel->keras2c_model(&myInput[14],&myOutput[14]); 
    ptModel->keras2c_model(&myInput[15],&myOutput[15]); 
    ptModel->keras2c_model(&myInput[16],&myOutput[16]); 
    ptModel->keras2c_model(&myInput[17],&myOutput[17]); 
    ptModel->keras2c_model(&myInput[18],&myOutput[18]); 
    ptModel->keras2c_model(&myInput[19],&myOutput[19]);     
    clock_t t1 = clock(); 
    printf("Average time over 20 tests: %e s \n", 
    ((double)t1-t0)/(double)CLOCKS_PER_SEC/(double)20); 


    ptModel->keras2c_model_terminate();
/*
//===================================================================================
//LSTM
//===================================================================================
    delete ptModel;

    ptModel = new LSTMModel();
    ptModel->keras2c_model_initialize();





float kerasarray_LSTM[NUMTESTE][9] ={{0.65501175,0.67588174,0.85425101,0.56352266,0.55621223,0.9291498,0.03155329,0.03149462,0.88461538},
                                {0.56352266,0.55621223,0.9291498,0.03155329,0.03149462,0.88461538,0.32538603,0.37631673,0.94331984},
                                {0.03155329,0.03149462,0.88461538,0.32538603,0.37631673,0.94331984,0.55511585,0.44135229,0.93522267},
                                {0.32538603,0.37631673,0.94331984,0.55511585,0.44135229,0.93522267,0.53900254,0.64567665,0.92307692},
                                {0.55511585,0.44135229,0.93522267,0.53900254,0.64567665,0.92307692,0.03210959,0.00352612,0.93319838},
                                {0.53900254,0.64567665,0.92307692,0.03210959,0.00352612,0.93319838,0.3680289,0.86928026,0.94129555},
                                {0.03210959,0.00352612,0.93319838,0.3680289,0.86928026,0.94129555,0.3039542,0.29426897,0.93117409},
                                {0.3680289,0.86928026,0.94129555,0.3039542,0.29426897,0.93117409,0.6457895,0.67724669,0.85425101},
                                {0.3039542,0.29426897,0.93117409,0.6457895,0.67724669,0.85425101,0.04668712,0.17646818,0.9291498},
                                {0.6457895,0.67724669,0.85425101,0.04668712,0.17646818,0.9291498,0.27943566,0.28029994,0.93927126},
                                {0.04668712,0.17646818,0.9291498,0.27943566,0.28029994,0.93927126,0.07447438,0.07433622,0.9291498},
                                {0.27943566,0.28029994,0.93927126,0.07447438,0.07433622,0.9291498,0.37345783,0.35216179,0.97975709},
                                {0.07447438,0.07433622,0.9291498,0.37345783,0.35216179,0.97975709,0.15853535,0.00705526,0.89068826},
                                {0.37345783,0.35216179,0.97975709,0.15853535,0.00705526,0.89068826,0.03154572,0.03148927,0.8562753},
                                {0.15853535,0.00705526,0.89068826,0.03154572,0.03148927,0.8562753,0.03154556,0.03148832,0.93927126},
                                {0.03154572,0.03148927,0.8562753,0.03154556,0.03148832,0.93927126,0.62510528,0.59482266,0.86842105},
                                {0.03154556,0.03148832,0.93927126,0.62510528,0.59482266,0.86842105,0.43998044,0.48919616,0.8582996},
                                {0.62510528,0.59482266,0.86842105,0.43998044,0.48919616,0.8582996,0.03962083,0.03954716,0.93522267},
                                {0.43998044,0.48919616,0.8582996,0.03962083,0.03954716,0.93522267,0.03154524,0.00405856,0.93724696},
                                {0.03962083,0.03954716,0.93522267,0.03154524,0.00405856,0.93724696,0.35445813,0.3382337,0.87246964}
                                };




 float kerasprevision_LSTM[NUMTESTE] = {0.09087843,
                                   0.90842015,
                                   0.3239425,
                                   0.288754,
                                   0.99481535,
                                   0.85941803,
                                   0.8518011,
                                   0.01508485,
                                   0.98192215,
                                   0.8880469,
                                   0.9851031,
                                   0.9933365,
                                   0.03627208,
                                   0.00256925,
                                   0.99862915,
                                   0.02791551,
                                   0.0051941,
                                   0.99431455,
                                   0.99649554,
                                   0.00908093
                                   };





//float kerasarray[] = {0.10858772,0.43363177,0.94129555,0.72319206,0.69356146,0.93117409,0.0556843,0.11762462,0.93522267};
//float  kerasprevision =0.5328561;

//float kerasarray[] = {0.03460024,0.10421212,0.93522267,0.47518336,0.47817113,0.94534413,0.17758868,0.76031619,0.93319838};

//float  kerasprevision =0.5068154;

float myfloatOutput_LSTM[1] = {0};

printf("###(  keras , keras2c,  erro  )\n");

for(int i=0; i<NUMTESTE;i++)
{

        myInput.array = kerasarray_LSTM[i];
        myInput.ndim = 2;//-------------------------------------------------------------------------------|
        myInput.numel = 9;//------------------------------------------------------------------------------|-|
                        //                                                                                | |
                        //k2c_tensor test9_lstm_24_input_1_input = {&test9_lstm_24_input_1_input_array[0],2,9,{3,3,1,1,1}}; 
                        //                     sÃ³ olhar o padrÃ£o nas primeiras linhas                          | | | | |
        myInput.shape[0] = 3;//--------------------------------------------------------------------------------| | | | |
        myInput.shape[1] = 3;//----------------------------------------------------------------------------------| | | |
        myInput.shape[2] = 1;//------------------------------------------------------------------------------------| | |
        myInput.shape[3] = 1;//--------------------------------------------------------------------------------------| |
        myInput.shape[4] = 1;//----------------------------------------------------------------------------------------|


        myfloatOutput_LSTM[1] = {0};
        myOutput.array=myfloatOutput_LSTM;
        myOutput.ndim=1;//-------------------------------------------------------------------------------|
        myOutput.numel=1;//------------------------------------------------------------------------------|-|
                                       //k2c_tensor c_client_0_13_test1 = {&c_client_0_13_test1_array[0],1,1,{1,1,1,1,1}}; 
        myOutput.shape[0]=1;//                                                                                | | | | |
        myOutput.shape[1]=1;//--------------------------------------------------------------------------------| | | | |
        myOutput.shape[2]=1;//------------------------------------------------------------------------------------| | |
        myOutput.shape[3]=1;//--------------------------------------------------------------------------------------| |
        myOutput.shape[4]=1;//----------------------------------------------------------------------------------------|



        ptModel->keras2c_model(&myInput,&myOutput); 

        printf("%3d(%f,%f,%e)\n", i,kerasprevision_LSTM[i], myOutput.array[0],fabsf(kerasprevision_LSTM[i]-myOutput.array[0]));

}

ptModel->keras2c_model_terminate();
delete ptModel;
//===================================================================================
//CNN
//===================================================================================


ptModel = new CNNModel();
ptModel->keras2c_model_initialize();

float kerasarray_CNN[NUMTESTE][9] ={{0.14749278,0.1415601 ,0.92712551,0.19201905,0.2585002 ,0.96356275,0.03154524,0.0040306 ,0.94331984},
                                {0.19201905,0.2585002 ,0.96356275,0.03154524,0.0040306 ,0.94331984,0.57073705,0.90577165,0.99392713},
                                {0.03154793,0.00112366,0.94129555,0.03210959,0.00352612,0.93319838,0.52058012,0.13857344,0.95748988},
                                {0.03210959,0.00352612,0.93319838,0.52058012,0.13857344,0.95748988,0.03806186,0.04001033,0.92105263},
                                {0.52058012,0.13857344,0.95748988,0.03806186,0.04001033,0.92105263,0.03202978,0.00544095,0.94534413},
                                {0.03806186,0.04001033,0.92105263,0.03202978,0.00544095,0.94534413,0.03154524,0.03148659,0.88663968},
                                {0.03202978,0.00544095,0.94534413,0.03154524,0.03148659,0.88663968,0.1935001 ,0.82663167,0.87449393},
                                {0.03154524,0.03148659,0.88663968,0.1935001 ,0.82663167,0.87449393,0.05678144,0.06272129,0.94129555},
                                {0.1935001 ,0.82663167,0.87449393,0.05678144,0.06272129,0.94129555,0.4547168 ,0.11150709,0.91902834},
                                {0.05678144,0.06272129,0.94129555,0.4547168 ,0.11150709,0.91902834,0.42593177,0.52146992,0.92712551},
                                {0.4547168 ,0.11150709,0.91902834,0.42593177,0.52146992,0.92712551,0.0315454 ,0.01511405,0.93117409},
                                {0.42593177,0.52146992,0.92712551,0.0315454 ,0.01511405,0.93117409,0.3803347 ,0.37767065,0.90283401},
                                {0.0315454 ,0.01511405,0.93117409,0.3803347 ,0.37767065,0.90283401,0.34185107,0.00917149,0.98178138},
                                {0.3803347 ,0.37767065,0.90283401,0.34185107,0.00917149,0.98178138,0.53748837,0.52376529,0.86639676},
                                {0.34185107,0.00917149,0.98178138,0.53748837,0.52376529,0.86639676,0.54620274,0.32750149,0.96153846},
                                {0.53748837,0.52376529,0.86639676,0.54620274,0.32750149,0.96153846,0.36449898,0.34639502,0.86032389},
                                {0.54620274,0.32750149,0.96153846,0.36449898,0.34639502,0.86032389,0.5396366 ,0.56015277,0.98582996},
                                {0.36449898,0.34639502,0.86032389,0.5396366 ,0.56015277,0.98582996,0.52864781,0.5469473 ,0.98987854},
                                {0.5396366 ,0.56015277,0.98582996,0.52864781,0.5469473 ,0.98987854,0.5348433 ,0.53157082,0.86234818},
                                {0.52864781,0.5469473 ,0.98987854,0.5348433 ,0.53157082,0.86234818,0.42493336,0.16594694,0.91902834}
                                };




float  kerasprevision_CNN[NUMTESTE] = {
                                    0.9998645,
                                    0.9305163,
                                    0.07900496,
                                   0.9640825,
                                   0.9999773,
                                   0.00043669,
                                   2.9226687e-06,
                                   0.99997276,
                                   0.00204071,
                                   0.21367303,
                                   0.99955136,
                                   0.02418783,
                                   0.9901481,
                                   8.361206e-05,
                                   0.06876914,
                                   5.250013e-07,
                                   0.9242712,
                                   0.9559127,
                                   1.3346447e-05,
                                   0.00034013,
                                   };





//float kerasarray[] = {0.10858772,0.43363177,0.94129555,0.72319206,0.69356146,0.93117409,0.0556843,0.11762462,0.93522267};
//float  kerasprevision =0.5328561;

//float kerasarray[] = {0.03460024,0.10421212,0.93522267,0.47518336,0.47817113,0.94534413,0.17758868,0.76031619,0.93319838};

//float  kerasprevision =0.5068154;

float myfloatOutput_CNN[1] = {0};

printf("###(  keras , keras2c,  erro  )\n");

for(int i=0; i<NUMTESTE;i++)
{

        myInput.array = kerasarray_CNN[i];
        myInput.ndim = 3;
        myInput.numel = 9;
        myInput.shape[0] = 3;
        myInput.shape[1] = 3;
        myInput.shape[2] = 1;
        myInput.shape[3] = 1;
        myInput.shape[4] = 1;


        myfloatOutput_CNN[1] = {0};
        myOutput.array=myfloatOutput_CNN;
        myOutput.ndim=1;
        myOutput.numel=1;
        myOutput.shape[0]=1;
        myOutput.shape[1]=1;
        myOutput.shape[2]=1;
        myOutput.shape[3]=1;
        myOutput.shape[4]=1;



        ptModel->keras2c_model(&myInput,&myOutput); 

        printf("%3d(%f,%f,%e)\n", i,kerasprevision_CNN[i], myOutput.array[0],fabsf(kerasprevision_CNN[i]-myOutput.array[0]));

}

cin>>c;
*/
}